// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

#include "user.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_base_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_base_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo;
}  // namespace protobuf_base_2eproto
namespace chen_im {
class UserRegisterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterReq>
      _instance;
} _UserRegisterReq_default_instance_;
class UserRegisterRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegisterRsp>
      _instance;
} _UserRegisterRsp_default_instance_;
class UserLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginReq>
      _instance;
} _UserLoginReq_default_instance_;
class UserLoginRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLoginRsp>
      _instance;
} _UserLoginRsp_default_instance_;
class PhoneVerifyCodeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneVerifyCodeReq>
      _instance;
} _PhoneVerifyCodeReq_default_instance_;
class PhoneVerifyCodeRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneVerifyCodeRsp>
      _instance;
} _PhoneVerifyCodeRsp_default_instance_;
class PhoneRegisterReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneRegisterReq>
      _instance;
} _PhoneRegisterReq_default_instance_;
class PhoneRegisterRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneRegisterRsp>
      _instance;
} _PhoneRegisterRsp_default_instance_;
class PhoneLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneLoginReq>
      _instance;
} _PhoneLoginReq_default_instance_;
class PhoneLoginRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneLoginRsp>
      _instance;
} _PhoneLoginRsp_default_instance_;
class GetUserInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoReq>
      _instance;
} _GetUserInfoReq_default_instance_;
class GetUserInfoRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoRsp>
      _instance;
} _GetUserInfoRsp_default_instance_;
class SetUserAvatarReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserAvatarReq>
      _instance;
} _SetUserAvatarReq_default_instance_;
class SetUserAvatarRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserAvatarRsp>
      _instance;
} _SetUserAvatarRsp_default_instance_;
class SetUserNicknameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserNicknameReq>
      _instance;
} _SetUserNicknameReq_default_instance_;
class SetUserNicknameRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserNicknameRsp>
      _instance;
} _SetUserNicknameRsp_default_instance_;
class SetUserDescriptionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserDescriptionReq>
      _instance;
} _SetUserDescriptionReq_default_instance_;
class SetUserDescriptionRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserDescriptionRsp>
      _instance;
} _SetUserDescriptionRsp_default_instance_;
class SetUserPhoneNumberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserPhoneNumberReq>
      _instance;
} _SetUserPhoneNumberReq_default_instance_;
class SetUserPhoneNumberRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetUserPhoneNumberRsp>
      _instance;
} _SetUserPhoneNumberRsp_default_instance_;
}  // namespace chen_im
namespace protobuf_user_2eproto {
static void InitDefaultsUserRegisterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_UserRegisterReq_default_instance_;
    new (ptr) ::chen_im::UserRegisterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::UserRegisterReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserRegisterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserRegisterReq}, {}};

static void InitDefaultsUserRegisterRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_UserRegisterRsp_default_instance_;
    new (ptr) ::chen_im::UserRegisterRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::UserRegisterRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserRegisterRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserRegisterRsp}, {}};

static void InitDefaultsUserLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_UserLoginReq_default_instance_;
    new (ptr) ::chen_im::UserLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::UserLoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserLoginReq}, {}};

static void InitDefaultsUserLoginRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_UserLoginRsp_default_instance_;
    new (ptr) ::chen_im::UserLoginRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::UserLoginRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserLoginRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserLoginRsp}, {}};

static void InitDefaultsPhoneVerifyCodeReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_PhoneVerifyCodeReq_default_instance_;
    new (ptr) ::chen_im::PhoneVerifyCodeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::PhoneVerifyCodeReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PhoneVerifyCodeReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPhoneVerifyCodeReq}, {}};

static void InitDefaultsPhoneVerifyCodeRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_PhoneVerifyCodeRsp_default_instance_;
    new (ptr) ::chen_im::PhoneVerifyCodeRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::PhoneVerifyCodeRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PhoneVerifyCodeRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPhoneVerifyCodeRsp}, {}};

static void InitDefaultsPhoneRegisterReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_PhoneRegisterReq_default_instance_;
    new (ptr) ::chen_im::PhoneRegisterReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::PhoneRegisterReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PhoneRegisterReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPhoneRegisterReq}, {}};

static void InitDefaultsPhoneRegisterRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_PhoneRegisterRsp_default_instance_;
    new (ptr) ::chen_im::PhoneRegisterRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::PhoneRegisterRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PhoneRegisterRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPhoneRegisterRsp}, {}};

static void InitDefaultsPhoneLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_PhoneLoginReq_default_instance_;
    new (ptr) ::chen_im::PhoneLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::PhoneLoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PhoneLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPhoneLoginReq}, {}};

static void InitDefaultsPhoneLoginRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_PhoneLoginRsp_default_instance_;
    new (ptr) ::chen_im::PhoneLoginRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::PhoneLoginRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PhoneLoginRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPhoneLoginRsp}, {}};

static void InitDefaultsGetUserInfoReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_GetUserInfoReq_default_instance_;
    new (ptr) ::chen_im::GetUserInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::GetUserInfoReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetUserInfoReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetUserInfoReq}, {}};

static void InitDefaultsGetUserInfoRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_GetUserInfoRsp_default_instance_;
    new (ptr) ::chen_im::GetUserInfoRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::GetUserInfoRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetUserInfoRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetUserInfoRsp}, {
      &protobuf_base_2eproto::scc_info_UserInfo.base,}};

static void InitDefaultsSetUserAvatarReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserAvatarReq_default_instance_;
    new (ptr) ::chen_im::SetUserAvatarReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserAvatarReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserAvatarReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserAvatarReq}, {}};

static void InitDefaultsSetUserAvatarRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserAvatarRsp_default_instance_;
    new (ptr) ::chen_im::SetUserAvatarRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserAvatarRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserAvatarRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserAvatarRsp}, {}};

static void InitDefaultsSetUserNicknameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserNicknameReq_default_instance_;
    new (ptr) ::chen_im::SetUserNicknameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserNicknameReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserNicknameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserNicknameReq}, {}};

static void InitDefaultsSetUserNicknameRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserNicknameRsp_default_instance_;
    new (ptr) ::chen_im::SetUserNicknameRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserNicknameRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserNicknameRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserNicknameRsp}, {}};

static void InitDefaultsSetUserDescriptionReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserDescriptionReq_default_instance_;
    new (ptr) ::chen_im::SetUserDescriptionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserDescriptionReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserDescriptionReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserDescriptionReq}, {}};

static void InitDefaultsSetUserDescriptionRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserDescriptionRsp_default_instance_;
    new (ptr) ::chen_im::SetUserDescriptionRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserDescriptionRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserDescriptionRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserDescriptionRsp}, {}};

static void InitDefaultsSetUserPhoneNumberReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserPhoneNumberReq_default_instance_;
    new (ptr) ::chen_im::SetUserPhoneNumberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserPhoneNumberReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserPhoneNumberReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserPhoneNumberReq}, {}};

static void InitDefaultsSetUserPhoneNumberRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chen_im::_SetUserPhoneNumberRsp_default_instance_;
    new (ptr) ::chen_im::SetUserPhoneNumberRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chen_im::SetUserPhoneNumberRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetUserPhoneNumberRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetUserPhoneNumberRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegisterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRegisterRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserLoginRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneVerifyCodeReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneVerifyCodeRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneRegisterReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneRegisterRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneLoginRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetUserInfoReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetUserInfoRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserAvatarReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserAvatarRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserNicknameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserNicknameRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserDescriptionReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserDescriptionRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserPhoneNumberReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetUserPhoneNumberRsp.base);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterReq, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterReq, verify_code_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterReq, verify_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserRegisterRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginReq, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginReq, verify_code_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginReq, verify_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginRsp, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::UserLoginRsp, login_session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeReq, phone_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeRsp, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneVerifyCodeRsp, verify_code_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterReq, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterReq, verify_code_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterReq, verify_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneRegisterRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginReq, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginReq, verify_code_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginReq, verify_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginRsp, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::PhoneLoginRsp, login_session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoReq, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoRsp, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::GetUserInfoRsp, user_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarReq, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarReq, avatar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserAvatarRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameReq, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameReq, nickname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserNicknameRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionReq, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionReq, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserDescriptionRsp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, phone_verify_code_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberReq, phone_verify_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberRsp, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chen_im::SetUserPhoneNumberRsp, errmsg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::chen_im::UserRegisterReq)},
  { 10, -1, sizeof(::chen_im::UserRegisterRsp)},
  { 18, -1, sizeof(::chen_im::UserLoginReq)},
  { 28, -1, sizeof(::chen_im::UserLoginRsp)},
  { 37, -1, sizeof(::chen_im::PhoneVerifyCodeReq)},
  { 44, -1, sizeof(::chen_im::PhoneVerifyCodeRsp)},
  { 53, -1, sizeof(::chen_im::PhoneRegisterReq)},
  { 62, -1, sizeof(::chen_im::PhoneRegisterRsp)},
  { 70, -1, sizeof(::chen_im::PhoneLoginReq)},
  { 79, -1, sizeof(::chen_im::PhoneLoginRsp)},
  { 88, -1, sizeof(::chen_im::GetUserInfoReq)},
  { 96, -1, sizeof(::chen_im::GetUserInfoRsp)},
  { 105, -1, sizeof(::chen_im::SetUserAvatarReq)},
  { 114, -1, sizeof(::chen_im::SetUserAvatarRsp)},
  { 122, -1, sizeof(::chen_im::SetUserNicknameReq)},
  { 131, -1, sizeof(::chen_im::SetUserNicknameRsp)},
  { 139, -1, sizeof(::chen_im::SetUserDescriptionReq)},
  { 148, -1, sizeof(::chen_im::SetUserDescriptionRsp)},
  { 156, -1, sizeof(::chen_im::SetUserPhoneNumberReq)},
  { 167, -1, sizeof(::chen_im::SetUserPhoneNumberRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_UserRegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_UserRegisterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_UserLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_UserLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_PhoneVerifyCodeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_PhoneVerifyCodeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_PhoneRegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_PhoneRegisterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_PhoneLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_PhoneLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_GetUserInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_GetUserInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserAvatarReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserAvatarRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserNicknameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserNicknameRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserDescriptionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserDescriptionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserPhoneNumberReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chen_im::_SetUserPhoneNumberRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "user.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nuser.proto\022\007chen_im\032\nbase.proto\"v\n\017Use"
      "rRegisterReq\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010nick"
      "name\030\002 \001(\t\022\020\n\010password\030\003 \001(\t\022\026\n\016verify_c"
      "ode_id\030\004 \001(\t\022\023\n\013verify_code\030\005 \001(\t\"F\n\017Use"
      "rRegisterRsp\022\022\n\nrequest_id\030\001 \001(\t\022\017\n\007succ"
      "ess\030\002 \001(\010\022\016\n\006errmsg\030\003 \001(\t\"s\n\014UserLoginRe"
      "q\022\022\n\nrequest_id\030\001 \001(\t\022\020\n\010nickname\030\002 \001(\t\022"
      "\020\n\010password\030\003 \001(\t\022\026\n\016verify_code_id\030\004 \001("
      "\t\022\023\n\013verify_code\030\005 \001(\t\"]\n\014UserLoginRsp\022\022"
      "\n\nrequest_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\016\n\006e"
      "rrmsg\030\003 \001(\t\022\030\n\020login_session_id\030\004 \001(\t\">\n"
      "\022PhoneVerifyCodeReq\022\022\n\nrequest_id\030\001 \001(\t\022"
      "\024\n\014phone_number\030\002 \001(\t\"a\n\022PhoneVerifyCode"
      "Rsp\022\022\n\nrequest_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010"
      "\022\016\n\006errmsg\030\003 \001(\t\022\026\n\016verify_code_id\030\004 \001(\t"
      "\"i\n\020PhoneRegisterReq\022\022\n\nrequest_id\030\001 \001(\t"
      "\022\024\n\014phone_number\030\002 \001(\t\022\026\n\016verify_code_id"
      "\030\003 \001(\t\022\023\n\013verify_code\030\004 \001(\t\"G\n\020PhoneRegi"
      "sterRsp\022\022\n\nrequest_id\030\001 \001(\t\022\017\n\007success\030\002"
      " \001(\010\022\016\n\006errmsg\030\003 \001(\t\"f\n\rPhoneLoginReq\022\022\n"
      "\nrequest_id\030\001 \001(\t\022\024\n\014phone_number\030\002 \001(\t\022"
      "\026\n\016verify_code_id\030\003 \001(\t\022\023\n\013verify_code\030\004"
      " \001(\t\"^\n\rPhoneLoginRsp\022\022\n\nrequest_id\030\001 \001("
      "\t\022\017\n\007success\030\002 \001(\010\022\016\n\006errmsg\030\003 \001(\t\022\030\n\020lo"
      "gin_session_id\030\004 \001(\t\"I\n\016GetUserInfoReq\022\022"
      "\n\nrequest_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n\ns"
      "ession_id\030\003 \001(\t\"k\n\016GetUserInfoRsp\022\022\n\nreq"
      "uest_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\016\n\006errmsg"
      "\030\003 \001(\t\022$\n\tuser_info\030\004 \001(\0132\021.chen_im.User"
      "Info\"[\n\020SetUserAvatarReq\022\022\n\nrequest_id\030\001"
      " \001(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n\nsession_id\030\003 \001("
      "\t\022\016\n\006avatar\030\004 \001(\014\"G\n\020SetUserAvatarRsp\022\022\n"
      "\nrequest_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\016\n\006er"
      "rmsg\030\003 \001(\t\"_\n\022SetUserNicknameReq\022\022\n\nrequ"
      "est_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n\nsession"
      "_id\030\003 \001(\t\022\020\n\010nickname\030\004 \001(\t\"I\n\022SetUserNi"
      "cknameRsp\022\022\n\nrequest_id\030\001 \001(\t\022\017\n\007success"
      "\030\002 \001(\010\022\016\n\006errmsg\030\003 \001(\t\"e\n\025SetUserDescrip"
      "tionReq\022\022\n\nrequest_id\030\001 \001(\t\022\017\n\007user_id\030\002"
      " \001(\t\022\022\n\nsession_id\030\003 \001(\t\022\023\n\013description\030"
      "\004 \001(\t\"L\n\025SetUserDescriptionRsp\022\022\n\nreques"
      "t_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\016\n\006errmsg\030\003 "
      "\001(\t\"\237\001\n\025SetUserPhoneNumberReq\022\022\n\nrequest"
      "_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n\nsession_id"
      "\030\003 \001(\t\022\024\n\014phone_number\030\004 \001(\t\022\034\n\024phone_ve"
      "rify_code_id\030\005 \001(\t\022\031\n\021phone_verify_code\030"
      "\006 \001(\t\"L\n\025SetUserPhoneNumberRsp\022\022\n\nreques"
      "t_id\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\016\n\006errmsg\030\003 "
      "\001(\t2\342\005\n\013UserService\022B\n\014UserRegister\022\030.ch"
      "en_im.UserRegisterReq\032\030.chen_im.UserRegi"
      "sterRsp\0229\n\tUserLogin\022\025.chen_im.UserLogin"
      "Req\032\025.chen_im.UserLoginRsp\022N\n\022GetPhoneVe"
      "rifyCode\022\033.chen_im.PhoneVerifyCodeReq\032\033."
      "chen_im.PhoneVerifyCodeRsp\022E\n\rPhoneRegis"
      "ter\022\031.chen_im.PhoneRegisterReq\032\031.chen_im"
      ".PhoneRegisterRsp\022<\n\nPhoneLogin\022\026.chen_i"
      "m.PhoneLoginReq\032\026.chen_im.PhoneLoginRsp\022"
      "\?\n\013GetUserInfo\022\027.chen_im.GetUserInfoReq\032"
      "\027.chen_im.GetUserInfoRsp\022E\n\rSetUserAvata"
      "r\022\031.chen_im.SetUserAvatarReq\032\031.chen_im.S"
      "etUserAvatarRsp\022K\n\017SetUserNickname\022\033.che"
      "n_im.SetUserNicknameReq\032\033.chen_im.SetUse"
      "rNicknameRsp\022T\n\022SetUserDescription\022\036.che"
      "n_im.SetUserDescriptionReq\032\036.chen_im.Set"
      "UserDescriptionRsp\022T\n\022SetUserPhoneNumber"
      "\022\036.chen_im.SetUserPhoneNumberReq\032\036.chen_"
      "im.SetUserPhoneNumberRspB\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2677);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "user.proto", &protobuf_RegisterTypes);
  ::protobuf_base_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_user_2eproto
namespace chen_im {

// ===================================================================

void UserRegisterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterReq::kRequestIdFieldNumber;
const int UserRegisterReq::kNicknameFieldNumber;
const int UserRegisterReq::kPasswordFieldNumber;
const int UserRegisterReq::kVerifyCodeIdFieldNumber;
const int UserRegisterReq::kVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterReq::UserRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_UserRegisterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.UserRegisterReq)
}
UserRegisterReq::UserRegisterReq(const UserRegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code_id().size() > 0) {
    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code().size() > 0) {
    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.UserRegisterReq)
}

void UserRegisterReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserRegisterReq::~UserRegisterReq() {
  // @@protoc_insertion_point(destructor:chen_im.UserRegisterReq)
  SharedDtor();
}

void UserRegisterReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegisterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRegisterReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegisterReq& UserRegisterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_UserRegisterReq.base);
  return *internal_default_instance();
}


void UserRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.UserRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.UserRegisterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterReq.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterReq.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterReq.verify_code_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code().data(), static_cast<int>(this->verify_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterReq.verify_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.UserRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.UserRegisterReq)
  return false;
#undef DO_
}

void UserRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.UserRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.verify_code_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->verify_code_id(), output);
  }

  // string verify_code = 5;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.verify_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->verify_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.UserRegisterReq)
}

::google::protobuf::uint8* UserRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.UserRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.verify_code_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->verify_code_id(), target);
  }

  // string verify_code = 5;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterReq.verify_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->verify_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.UserRegisterReq)
  return target;
}

size_t UserRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.UserRegisterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code_id());
  }

  // string verify_code = 5;
  if (this->verify_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.UserRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.UserRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.UserRegisterReq)
    MergeFrom(*source);
  }
}

void UserRegisterReq::MergeFrom(const UserRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.UserRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.verify_code_id().size() > 0) {

    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  if (from.verify_code().size() > 0) {

    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
}

void UserRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.UserRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterReq::CopyFrom(const UserRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.UserRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterReq::IsInitialized() const {
  return true;
}

void UserRegisterReq::Swap(UserRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterReq::InternalSwap(UserRegisterReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_id_.Swap(&other->verify_code_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_.Swap(&other->verify_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRegisterReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegisterRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegisterRsp::kRequestIdFieldNumber;
const int UserRegisterRsp::kSuccessFieldNumber;
const int UserRegisterRsp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegisterRsp::UserRegisterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_UserRegisterRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.UserRegisterRsp)
}
UserRegisterRsp::UserRegisterRsp(const UserRegisterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.UserRegisterRsp)
}

void UserRegisterRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

UserRegisterRsp::~UserRegisterRsp() {
  // @@protoc_insertion_point(destructor:chen_im.UserRegisterRsp)
  SharedDtor();
}

void UserRegisterRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegisterRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRegisterRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegisterRsp& UserRegisterRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_UserRegisterRsp.base);
  return *internal_default_instance();
}


void UserRegisterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.UserRegisterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool UserRegisterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.UserRegisterRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserRegisterRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.UserRegisterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.UserRegisterRsp)
  return false;
#undef DO_
}

void UserRegisterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.UserRegisterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.UserRegisterRsp)
}

::google::protobuf::uint8* UserRegisterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.UserRegisterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserRegisterRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.UserRegisterRsp)
  return target;
}

size_t UserRegisterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.UserRegisterRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRegisterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.UserRegisterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegisterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegisterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.UserRegisterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.UserRegisterRsp)
    MergeFrom(*source);
  }
}

void UserRegisterRsp::MergeFrom(const UserRegisterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.UserRegisterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void UserRegisterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.UserRegisterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegisterRsp::CopyFrom(const UserRegisterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.UserRegisterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegisterRsp::IsInitialized() const {
  return true;
}

void UserRegisterRsp::Swap(UserRegisterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegisterRsp::InternalSwap(UserRegisterRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRegisterRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginReq::kRequestIdFieldNumber;
const int UserLoginReq::kNicknameFieldNumber;
const int UserLoginReq::kPasswordFieldNumber;
const int UserLoginReq::kVerifyCodeIdFieldNumber;
const int UserLoginReq::kVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginReq::UserLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_UserLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.UserLoginReq)
}
UserLoginReq::UserLoginReq(const UserLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code_id().size() > 0) {
    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code().size() > 0) {
    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.UserLoginReq)
}

void UserLoginReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserLoginReq::~UserLoginReq() {
  // @@protoc_insertion_point(destructor:chen_im.UserLoginReq)
  SharedDtor();
}

void UserLoginReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserLoginReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginReq& UserLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_UserLoginReq.base);
  return *internal_default_instance();
}


void UserLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.UserLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.UserLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginReq.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginReq.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginReq.verify_code_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code().data(), static_cast<int>(this->verify_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginReq.verify_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.UserLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.UserLoginReq)
  return false;
#undef DO_
}

void UserLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.UserLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.verify_code_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->verify_code_id(), output);
  }

  // string verify_code = 5;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.verify_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->verify_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.UserLoginReq)
}

::google::protobuf::uint8* UserLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.UserLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.verify_code_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->verify_code_id(), target);
  }

  // string verify_code = 5;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginReq.verify_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->verify_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.UserLoginReq)
  return target;
}

size_t UserLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.UserLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code_id());
  }

  // string verify_code = 5;
  if (this->verify_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.UserLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.UserLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.UserLoginReq)
    MergeFrom(*source);
  }
}

void UserLoginReq::MergeFrom(const UserLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.UserLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.verify_code_id().size() > 0) {

    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  if (from.verify_code().size() > 0) {

    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
}

void UserLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.UserLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginReq::CopyFrom(const UserLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.UserLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginReq::IsInitialized() const {
  return true;
}

void UserLoginReq::Swap(UserLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginReq::InternalSwap(UserLoginReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_id_.Swap(&other->verify_code_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_.Swap(&other->verify_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserLoginReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLoginRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginRsp::kRequestIdFieldNumber;
const int UserLoginRsp::kSuccessFieldNumber;
const int UserLoginRsp::kErrmsgFieldNumber;
const int UserLoginRsp::kLoginSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginRsp::UserLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_UserLoginRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.UserLoginRsp)
}
UserLoginRsp::UserLoginRsp(const UserLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  login_session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_session_id().size() > 0) {
    login_session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_session_id_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.UserLoginRsp)
}

void UserLoginRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

UserLoginRsp::~UserLoginRsp() {
  // @@protoc_insertion_point(destructor:chen_im.UserLoginRsp)
  SharedDtor();
}

void UserLoginRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLoginRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserLoginRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLoginRsp& UserLoginRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_UserLoginRsp.base);
  return *internal_default_instance();
}


void UserLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.UserLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool UserLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.UserLoginRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_session_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_session_id().data(), static_cast<int>(this->login_session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.UserLoginRsp.login_session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.UserLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.UserLoginRsp)
  return false;
#undef DO_
}

void UserLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.UserLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  // string login_session_id = 4;
  if (this->login_session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_session_id().data(), static_cast<int>(this->login_session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginRsp.login_session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->login_session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.UserLoginRsp)
}

::google::protobuf::uint8* UserLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.UserLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  // string login_session_id = 4;
  if (this->login_session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_session_id().data(), static_cast<int>(this->login_session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.UserLoginRsp.login_session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->login_session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.UserLoginRsp)
  return target;
}

size_t UserLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.UserLoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string login_session_id = 4;
  if (this->login_session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_session_id());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.UserLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.UserLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.UserLoginRsp)
    MergeFrom(*source);
  }
}

void UserLoginRsp::MergeFrom(const UserLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.UserLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.login_session_id().size() > 0) {

    login_session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_session_id_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void UserLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.UserLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginRsp::CopyFrom(const UserLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.UserLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginRsp::IsInitialized() const {
  return true;
}

void UserLoginRsp::Swap(UserLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginRsp::InternalSwap(UserLoginRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_session_id_.Swap(&other->login_session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserLoginRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneVerifyCodeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneVerifyCodeReq::kRequestIdFieldNumber;
const int PhoneVerifyCodeReq::kPhoneNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneVerifyCodeReq::PhoneVerifyCodeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_PhoneVerifyCodeReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.PhoneVerifyCodeReq)
}
PhoneVerifyCodeReq::PhoneVerifyCodeReq(const PhoneVerifyCodeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.PhoneVerifyCodeReq)
}

void PhoneVerifyCodeReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PhoneVerifyCodeReq::~PhoneVerifyCodeReq() {
  // @@protoc_insertion_point(destructor:chen_im.PhoneVerifyCodeReq)
  SharedDtor();
}

void PhoneVerifyCodeReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneVerifyCodeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneVerifyCodeReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneVerifyCodeReq& PhoneVerifyCodeReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_PhoneVerifyCodeReq.base);
  return *internal_default_instance();
}


void PhoneVerifyCodeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.PhoneVerifyCodeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PhoneVerifyCodeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.PhoneVerifyCodeReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneVerifyCodeReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_number().data(), static_cast<int>(this->phone_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneVerifyCodeReq.phone_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.PhoneVerifyCodeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.PhoneVerifyCodeReq)
  return false;
#undef DO_
}

void PhoneVerifyCodeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.PhoneVerifyCodeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeReq.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.PhoneVerifyCodeReq)
}

::google::protobuf::uint8* PhoneVerifyCodeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.PhoneVerifyCodeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeReq.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.PhoneVerifyCodeReq)
  return target;
}

size_t PhoneVerifyCodeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.PhoneVerifyCodeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneVerifyCodeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.PhoneVerifyCodeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneVerifyCodeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneVerifyCodeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.PhoneVerifyCodeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.PhoneVerifyCodeReq)
    MergeFrom(*source);
  }
}

void PhoneVerifyCodeReq::MergeFrom(const PhoneVerifyCodeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.PhoneVerifyCodeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.phone_number().size() > 0) {

    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
}

void PhoneVerifyCodeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.PhoneVerifyCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneVerifyCodeReq::CopyFrom(const PhoneVerifyCodeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.PhoneVerifyCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneVerifyCodeReq::IsInitialized() const {
  return true;
}

void PhoneVerifyCodeReq::Swap(PhoneVerifyCodeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneVerifyCodeReq::InternalSwap(PhoneVerifyCodeReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_number_.Swap(&other->phone_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneVerifyCodeReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneVerifyCodeRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneVerifyCodeRsp::kRequestIdFieldNumber;
const int PhoneVerifyCodeRsp::kSuccessFieldNumber;
const int PhoneVerifyCodeRsp::kErrmsgFieldNumber;
const int PhoneVerifyCodeRsp::kVerifyCodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneVerifyCodeRsp::PhoneVerifyCodeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_PhoneVerifyCodeRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.PhoneVerifyCodeRsp)
}
PhoneVerifyCodeRsp::PhoneVerifyCodeRsp(const PhoneVerifyCodeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code_id().size() > 0) {
    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.PhoneVerifyCodeRsp)
}

void PhoneVerifyCodeRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PhoneVerifyCodeRsp::~PhoneVerifyCodeRsp() {
  // @@protoc_insertion_point(destructor:chen_im.PhoneVerifyCodeRsp)
  SharedDtor();
}

void PhoneVerifyCodeRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneVerifyCodeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneVerifyCodeRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneVerifyCodeRsp& PhoneVerifyCodeRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_PhoneVerifyCodeRsp.base);
  return *internal_default_instance();
}


void PhoneVerifyCodeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.PhoneVerifyCodeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool PhoneVerifyCodeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.PhoneVerifyCodeRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneVerifyCodeRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneVerifyCodeRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneVerifyCodeRsp.verify_code_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.PhoneVerifyCodeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.PhoneVerifyCodeRsp)
  return false;
#undef DO_
}

void PhoneVerifyCodeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.PhoneVerifyCodeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeRsp.verify_code_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->verify_code_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.PhoneVerifyCodeRsp)
}

::google::protobuf::uint8* PhoneVerifyCodeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.PhoneVerifyCodeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneVerifyCodeRsp.verify_code_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->verify_code_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.PhoneVerifyCodeRsp)
  return target;
}

size_t PhoneVerifyCodeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.PhoneVerifyCodeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string verify_code_id = 4;
  if (this->verify_code_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code_id());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneVerifyCodeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.PhoneVerifyCodeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneVerifyCodeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneVerifyCodeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.PhoneVerifyCodeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.PhoneVerifyCodeRsp)
    MergeFrom(*source);
  }
}

void PhoneVerifyCodeRsp::MergeFrom(const PhoneVerifyCodeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.PhoneVerifyCodeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.verify_code_id().size() > 0) {

    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PhoneVerifyCodeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.PhoneVerifyCodeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneVerifyCodeRsp::CopyFrom(const PhoneVerifyCodeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.PhoneVerifyCodeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneVerifyCodeRsp::IsInitialized() const {
  return true;
}

void PhoneVerifyCodeRsp::Swap(PhoneVerifyCodeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneVerifyCodeRsp::InternalSwap(PhoneVerifyCodeRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_id_.Swap(&other->verify_code_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneVerifyCodeRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneRegisterReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneRegisterReq::kRequestIdFieldNumber;
const int PhoneRegisterReq::kPhoneNumberFieldNumber;
const int PhoneRegisterReq::kVerifyCodeIdFieldNumber;
const int PhoneRegisterReq::kVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneRegisterReq::PhoneRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_PhoneRegisterReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.PhoneRegisterReq)
}
PhoneRegisterReq::PhoneRegisterReq(const PhoneRegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code_id().size() > 0) {
    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code().size() > 0) {
    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.PhoneRegisterReq)
}

void PhoneRegisterReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PhoneRegisterReq::~PhoneRegisterReq() {
  // @@protoc_insertion_point(destructor:chen_im.PhoneRegisterReq)
  SharedDtor();
}

void PhoneRegisterReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneRegisterReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneRegisterReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneRegisterReq& PhoneRegisterReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_PhoneRegisterReq.base);
  return *internal_default_instance();
}


void PhoneRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.PhoneRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PhoneRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.PhoneRegisterReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneRegisterReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_number().data(), static_cast<int>(this->phone_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneRegisterReq.phone_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneRegisterReq.verify_code_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code().data(), static_cast<int>(this->verify_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneRegisterReq.verify_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.PhoneRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.PhoneRegisterReq)
  return false;
#undef DO_
}

void PhoneRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.PhoneRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone_number(), output);
  }

  // string verify_code_id = 3;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.verify_code_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verify_code_id(), output);
  }

  // string verify_code = 4;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.verify_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->verify_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.PhoneRegisterReq)
}

::google::protobuf::uint8* PhoneRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.PhoneRegisterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone_number(), target);
  }

  // string verify_code_id = 3;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.verify_code_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verify_code_id(), target);
  }

  // string verify_code = 4;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterReq.verify_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->verify_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.PhoneRegisterReq)
  return target;
}

size_t PhoneRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.PhoneRegisterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_number());
  }

  // string verify_code_id = 3;
  if (this->verify_code_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code_id());
  }

  // string verify_code = 4;
  if (this->verify_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.PhoneRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.PhoneRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.PhoneRegisterReq)
    MergeFrom(*source);
  }
}

void PhoneRegisterReq::MergeFrom(const PhoneRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.PhoneRegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.phone_number().size() > 0) {

    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.verify_code_id().size() > 0) {

    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  if (from.verify_code().size() > 0) {

    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
}

void PhoneRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.PhoneRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneRegisterReq::CopyFrom(const PhoneRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.PhoneRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneRegisterReq::IsInitialized() const {
  return true;
}

void PhoneRegisterReq::Swap(PhoneRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneRegisterReq::InternalSwap(PhoneRegisterReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_number_.Swap(&other->phone_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_id_.Swap(&other->verify_code_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_.Swap(&other->verify_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneRegisterReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneRegisterRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneRegisterRsp::kRequestIdFieldNumber;
const int PhoneRegisterRsp::kSuccessFieldNumber;
const int PhoneRegisterRsp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneRegisterRsp::PhoneRegisterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_PhoneRegisterRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.PhoneRegisterRsp)
}
PhoneRegisterRsp::PhoneRegisterRsp(const PhoneRegisterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.PhoneRegisterRsp)
}

void PhoneRegisterRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PhoneRegisterRsp::~PhoneRegisterRsp() {
  // @@protoc_insertion_point(destructor:chen_im.PhoneRegisterRsp)
  SharedDtor();
}

void PhoneRegisterRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneRegisterRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneRegisterRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneRegisterRsp& PhoneRegisterRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_PhoneRegisterRsp.base);
  return *internal_default_instance();
}


void PhoneRegisterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.PhoneRegisterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool PhoneRegisterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.PhoneRegisterRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneRegisterRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneRegisterRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.PhoneRegisterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.PhoneRegisterRsp)
  return false;
#undef DO_
}

void PhoneRegisterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.PhoneRegisterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.PhoneRegisterRsp)
}

::google::protobuf::uint8* PhoneRegisterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.PhoneRegisterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneRegisterRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.PhoneRegisterRsp)
  return target;
}

size_t PhoneRegisterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.PhoneRegisterRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneRegisterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.PhoneRegisterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneRegisterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneRegisterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.PhoneRegisterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.PhoneRegisterRsp)
    MergeFrom(*source);
  }
}

void PhoneRegisterRsp::MergeFrom(const PhoneRegisterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.PhoneRegisterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PhoneRegisterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.PhoneRegisterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneRegisterRsp::CopyFrom(const PhoneRegisterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.PhoneRegisterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneRegisterRsp::IsInitialized() const {
  return true;
}

void PhoneRegisterRsp::Swap(PhoneRegisterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneRegisterRsp::InternalSwap(PhoneRegisterRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneRegisterRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneLoginReq::kRequestIdFieldNumber;
const int PhoneLoginReq::kPhoneNumberFieldNumber;
const int PhoneLoginReq::kVerifyCodeIdFieldNumber;
const int PhoneLoginReq::kVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneLoginReq::PhoneLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_PhoneLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.PhoneLoginReq)
}
PhoneLoginReq::PhoneLoginReq(const PhoneLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code_id().size() > 0) {
    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verify_code().size() > 0) {
    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.PhoneLoginReq)
}

void PhoneLoginReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PhoneLoginReq::~PhoneLoginReq() {
  // @@protoc_insertion_point(destructor:chen_im.PhoneLoginReq)
  SharedDtor();
}

void PhoneLoginReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneLoginReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneLoginReq& PhoneLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_PhoneLoginReq.base);
  return *internal_default_instance();
}


void PhoneLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.PhoneLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PhoneLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.PhoneLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_number().data(), static_cast<int>(this->phone_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginReq.phone_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginReq.verify_code_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string verify_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verify_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verify_code().data(), static_cast<int>(this->verify_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginReq.verify_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.PhoneLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.PhoneLoginReq)
  return false;
#undef DO_
}

void PhoneLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.PhoneLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone_number(), output);
  }

  // string verify_code_id = 3;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.verify_code_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verify_code_id(), output);
  }

  // string verify_code = 4;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.verify_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->verify_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.PhoneLoginReq)
}

::google::protobuf::uint8* PhoneLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.PhoneLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone_number(), target);
  }

  // string verify_code_id = 3;
  if (this->verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code_id().data(), static_cast<int>(this->verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.verify_code_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verify_code_id(), target);
  }

  // string verify_code = 4;
  if (this->verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verify_code().data(), static_cast<int>(this->verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginReq.verify_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->verify_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.PhoneLoginReq)
  return target;
}

size_t PhoneLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.PhoneLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string phone_number = 2;
  if (this->phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_number());
  }

  // string verify_code_id = 3;
  if (this->verify_code_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code_id());
  }

  // string verify_code = 4;
  if (this->verify_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verify_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.PhoneLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.PhoneLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.PhoneLoginReq)
    MergeFrom(*source);
  }
}

void PhoneLoginReq::MergeFrom(const PhoneLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.PhoneLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.phone_number().size() > 0) {

    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.verify_code_id().size() > 0) {

    verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_id_);
  }
  if (from.verify_code().size() > 0) {

    verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verify_code_);
  }
}

void PhoneLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.PhoneLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneLoginReq::CopyFrom(const PhoneLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.PhoneLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneLoginReq::IsInitialized() const {
  return true;
}

void PhoneLoginReq::Swap(PhoneLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneLoginReq::InternalSwap(PhoneLoginReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_number_.Swap(&other->phone_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_id_.Swap(&other->verify_code_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  verify_code_.Swap(&other->verify_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneLoginReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneLoginRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneLoginRsp::kRequestIdFieldNumber;
const int PhoneLoginRsp::kSuccessFieldNumber;
const int PhoneLoginRsp::kErrmsgFieldNumber;
const int PhoneLoginRsp::kLoginSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneLoginRsp::PhoneLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_PhoneLoginRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.PhoneLoginRsp)
}
PhoneLoginRsp::PhoneLoginRsp(const PhoneLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  login_session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_session_id().size() > 0) {
    login_session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_session_id_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.PhoneLoginRsp)
}

void PhoneLoginRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

PhoneLoginRsp::~PhoneLoginRsp() {
  // @@protoc_insertion_point(destructor:chen_im.PhoneLoginRsp)
  SharedDtor();
}

void PhoneLoginRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhoneLoginRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneLoginRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneLoginRsp& PhoneLoginRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_PhoneLoginRsp.base);
  return *internal_default_instance();
}


void PhoneLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.PhoneLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool PhoneLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.PhoneLoginRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_session_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_session_id().data(), static_cast<int>(this->login_session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.PhoneLoginRsp.login_session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.PhoneLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.PhoneLoginRsp)
  return false;
#undef DO_
}

void PhoneLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.PhoneLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  // string login_session_id = 4;
  if (this->login_session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_session_id().data(), static_cast<int>(this->login_session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginRsp.login_session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->login_session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.PhoneLoginRsp)
}

::google::protobuf::uint8* PhoneLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.PhoneLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  // string login_session_id = 4;
  if (this->login_session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_session_id().data(), static_cast<int>(this->login_session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.PhoneLoginRsp.login_session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->login_session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.PhoneLoginRsp)
  return target;
}

size_t PhoneLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.PhoneLoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string login_session_id = 4;
  if (this->login_session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_session_id());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.PhoneLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.PhoneLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.PhoneLoginRsp)
    MergeFrom(*source);
  }
}

void PhoneLoginRsp::MergeFrom(const PhoneLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.PhoneLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.login_session_id().size() > 0) {

    login_session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_session_id_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PhoneLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.PhoneLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneLoginRsp::CopyFrom(const PhoneLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.PhoneLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneLoginRsp::IsInitialized() const {
  return true;
}

void PhoneLoginRsp::Swap(PhoneLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneLoginRsp::InternalSwap(PhoneLoginRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_session_id_.Swap(&other->login_session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneLoginRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUserInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoReq::kRequestIdFieldNumber;
const int GetUserInfoReq::kUserIdFieldNumber;
const int GetUserInfoReq::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoReq::GetUserInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_GetUserInfoReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.GetUserInfoReq)
}
GetUserInfoReq::GetUserInfoReq(const GetUserInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.GetUserInfoReq)
}

void GetUserInfoReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetUserInfoReq::~GetUserInfoReq() {
  // @@protoc_insertion_point(destructor:chen_im.GetUserInfoReq)
  SharedDtor();
}

void GetUserInfoReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetUserInfoReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetUserInfoReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoReq& GetUserInfoReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_GetUserInfoReq.base);
  return *internal_default_instance();
}


void GetUserInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetUserInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.GetUserInfoReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.GetUserInfoReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.GetUserInfoReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.GetUserInfoReq.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.GetUserInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.GetUserInfoReq)
  return false;
#undef DO_
}

void GetUserInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoReq.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.GetUserInfoReq)
}

::google::protobuf::uint8* GetUserInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.GetUserInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoReq.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.GetUserInfoReq)
  return target;
}

size_t GetUserInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.GetUserInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetUserInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.GetUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.GetUserInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.GetUserInfoReq)
    MergeFrom(*source);
  }
}

void GetUserInfoReq::MergeFrom(const GetUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.GetUserInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void GetUserInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.GetUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoReq::CopyFrom(const GetUserInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.GetUserInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoReq::IsInitialized() const {
  return true;
}

void GetUserInfoReq::Swap(GetUserInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoReq::InternalSwap(GetUserInfoReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetUserInfoReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUserInfoRsp::InitAsDefaultInstance() {
  ::chen_im::_GetUserInfoRsp_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::chen_im::UserInfo*>(
      ::chen_im::UserInfo::internal_default_instance());
}
void GetUserInfoRsp::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoRsp::kRequestIdFieldNumber;
const int GetUserInfoRsp::kSuccessFieldNumber;
const int GetUserInfoRsp::kErrmsgFieldNumber;
const int GetUserInfoRsp::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoRsp::GetUserInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_GetUserInfoRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.GetUserInfoRsp)
}
GetUserInfoRsp::GetUserInfoRsp(const GetUserInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_user_info()) {
    user_info_ = new ::chen_im::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.GetUserInfoRsp)
}

void GetUserInfoRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(success_));
}

GetUserInfoRsp::~GetUserInfoRsp() {
  // @@protoc_insertion_point(destructor:chen_im.GetUserInfoRsp)
  SharedDtor();
}

void GetUserInfoRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_info_;
}

void GetUserInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetUserInfoRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoRsp& GetUserInfoRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_GetUserInfoRsp.base);
  return *internal_default_instance();
}


void GetUserInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.GetUserInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
  success_ = false;
  _internal_metadata_.Clear();
}

bool GetUserInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.GetUserInfoRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.GetUserInfoRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.GetUserInfoRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .chen_im.UserInfo user_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.GetUserInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.GetUserInfoRsp)
  return false;
#undef DO_
}

void GetUserInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.GetUserInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  // .chen_im.UserInfo user_info = 4;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_user_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.GetUserInfoRsp)
}

::google::protobuf::uint8* GetUserInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.GetUserInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.GetUserInfoRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  // .chen_im.UserInfo user_info = 4;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_user_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.GetUserInfoRsp)
  return target;
}

size_t GetUserInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.GetUserInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // .chen_im.UserInfo user_info = 4;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetUserInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.GetUserInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.GetUserInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.GetUserInfoRsp)
    MergeFrom(*source);
  }
}

void GetUserInfoRsp::MergeFrom(const GetUserInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.GetUserInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.has_user_info()) {
    mutable_user_info()->::chen_im::UserInfo::MergeFrom(from.user_info());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void GetUserInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.GetUserInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoRsp::CopyFrom(const GetUserInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.GetUserInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoRsp::IsInitialized() const {
  return true;
}

void GetUserInfoRsp::Swap(GetUserInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoRsp::InternalSwap(GetUserInfoRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_info_, other->user_info_);
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetUserInfoRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserAvatarReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserAvatarReq::kRequestIdFieldNumber;
const int SetUserAvatarReq::kUserIdFieldNumber;
const int SetUserAvatarReq::kSessionIdFieldNumber;
const int SetUserAvatarReq::kAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserAvatarReq::SetUserAvatarReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserAvatarReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserAvatarReq)
}
SetUserAvatarReq::SetUserAvatarReq(const SetUserAvatarReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar().size() > 0) {
    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserAvatarReq)
}

void SetUserAvatarReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetUserAvatarReq::~SetUserAvatarReq() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserAvatarReq)
  SharedDtor();
}

void SetUserAvatarReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserAvatarReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserAvatarReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserAvatarReq& SetUserAvatarReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserAvatarReq.base);
  return *internal_default_instance();
}


void SetUserAvatarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetUserAvatarReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserAvatarReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserAvatarReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserAvatarReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserAvatarReq.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes avatar = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserAvatarReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserAvatarReq)
  return false;
#undef DO_
}

void SetUserAvatarReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarReq.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->session_id(), output);
  }

  // bytes avatar = 4;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->avatar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserAvatarReq)
}

::google::protobuf::uint8* SetUserAvatarReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserAvatarReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarReq.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->session_id(), target);
  }

  // bytes avatar = 4;
  if (this->avatar().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->avatar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserAvatarReq)
  return target;
}

size_t SetUserAvatarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserAvatarReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // bytes avatar = 4;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->avatar());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserAvatarReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserAvatarReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserAvatarReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserAvatarReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserAvatarReq)
    MergeFrom(*source);
  }
}

void SetUserAvatarReq::MergeFrom(const SetUserAvatarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserAvatarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
}

void SetUserAvatarReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserAvatarReq::CopyFrom(const SetUserAvatarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserAvatarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserAvatarReq::IsInitialized() const {
  return true;
}

void SetUserAvatarReq::Swap(SetUserAvatarReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserAvatarReq::InternalSwap(SetUserAvatarReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  avatar_.Swap(&other->avatar_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserAvatarReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserAvatarRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserAvatarRsp::kRequestIdFieldNumber;
const int SetUserAvatarRsp::kSuccessFieldNumber;
const int SetUserAvatarRsp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserAvatarRsp::SetUserAvatarRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserAvatarRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserAvatarRsp)
}
SetUserAvatarRsp::SetUserAvatarRsp(const SetUserAvatarRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserAvatarRsp)
}

void SetUserAvatarRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

SetUserAvatarRsp::~SetUserAvatarRsp() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserAvatarRsp)
  SharedDtor();
}

void SetUserAvatarRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserAvatarRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserAvatarRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserAvatarRsp& SetUserAvatarRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserAvatarRsp.base);
  return *internal_default_instance();
}


void SetUserAvatarRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool SetUserAvatarRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserAvatarRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserAvatarRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserAvatarRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserAvatarRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserAvatarRsp)
  return false;
#undef DO_
}

void SetUserAvatarRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserAvatarRsp)
}

::google::protobuf::uint8* SetUserAvatarRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserAvatarRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserAvatarRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserAvatarRsp)
  return target;
}

size_t SetUserAvatarRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserAvatarRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserAvatarRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserAvatarRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserAvatarRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserAvatarRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserAvatarRsp)
    MergeFrom(*source);
  }
}

void SetUserAvatarRsp::MergeFrom(const SetUserAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserAvatarRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void SetUserAvatarRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserAvatarRsp::CopyFrom(const SetUserAvatarRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserAvatarRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserAvatarRsp::IsInitialized() const {
  return true;
}

void SetUserAvatarRsp::Swap(SetUserAvatarRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserAvatarRsp::InternalSwap(SetUserAvatarRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserAvatarRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserNicknameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserNicknameReq::kRequestIdFieldNumber;
const int SetUserNicknameReq::kUserIdFieldNumber;
const int SetUserNicknameReq::kSessionIdFieldNumber;
const int SetUserNicknameReq::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserNicknameReq::SetUserNicknameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserNicknameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserNicknameReq)
}
SetUserNicknameReq::SetUserNicknameReq(const SetUserNicknameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserNicknameReq)
}

void SetUserNicknameReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetUserNicknameReq::~SetUserNicknameReq() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserNicknameReq)
  SharedDtor();
}

void SetUserNicknameReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserNicknameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserNicknameReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserNicknameReq& SetUserNicknameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserNicknameReq.base);
  return *internal_default_instance();
}


void SetUserNicknameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserNicknameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetUserNicknameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserNicknameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserNicknameReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserNicknameReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserNicknameReq.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserNicknameReq.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserNicknameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserNicknameReq)
  return false;
#undef DO_
}

void SetUserNicknameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserNicknameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->session_id(), output);
  }

  // string nickname = 4;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nickname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserNicknameReq)
}

::google::protobuf::uint8* SetUserNicknameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserNicknameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->session_id(), target);
  }

  // string nickname = 4;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameReq.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nickname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserNicknameReq)
  return target;
}

size_t SetUserNicknameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserNicknameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string nickname = 4;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserNicknameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserNicknameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserNicknameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserNicknameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserNicknameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserNicknameReq)
    MergeFrom(*source);
  }
}

void SetUserNicknameReq::MergeFrom(const SetUserNicknameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserNicknameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void SetUserNicknameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserNicknameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserNicknameReq::CopyFrom(const SetUserNicknameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserNicknameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserNicknameReq::IsInitialized() const {
  return true;
}

void SetUserNicknameReq::Swap(SetUserNicknameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserNicknameReq::InternalSwap(SetUserNicknameReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserNicknameReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserNicknameRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserNicknameRsp::kRequestIdFieldNumber;
const int SetUserNicknameRsp::kSuccessFieldNumber;
const int SetUserNicknameRsp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserNicknameRsp::SetUserNicknameRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserNicknameRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserNicknameRsp)
}
SetUserNicknameRsp::SetUserNicknameRsp(const SetUserNicknameRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserNicknameRsp)
}

void SetUserNicknameRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

SetUserNicknameRsp::~SetUserNicknameRsp() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserNicknameRsp)
  SharedDtor();
}

void SetUserNicknameRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserNicknameRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserNicknameRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserNicknameRsp& SetUserNicknameRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserNicknameRsp.base);
  return *internal_default_instance();
}


void SetUserNicknameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserNicknameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool SetUserNicknameRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserNicknameRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserNicknameRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserNicknameRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserNicknameRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserNicknameRsp)
  return false;
#undef DO_
}

void SetUserNicknameRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserNicknameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserNicknameRsp)
}

::google::protobuf::uint8* SetUserNicknameRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserNicknameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserNicknameRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserNicknameRsp)
  return target;
}

size_t SetUserNicknameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserNicknameRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserNicknameRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserNicknameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserNicknameRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserNicknameRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserNicknameRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserNicknameRsp)
    MergeFrom(*source);
  }
}

void SetUserNicknameRsp::MergeFrom(const SetUserNicknameRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserNicknameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void SetUserNicknameRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserNicknameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserNicknameRsp::CopyFrom(const SetUserNicknameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserNicknameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserNicknameRsp::IsInitialized() const {
  return true;
}

void SetUserNicknameRsp::Swap(SetUserNicknameRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserNicknameRsp::InternalSwap(SetUserNicknameRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserNicknameRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserDescriptionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserDescriptionReq::kRequestIdFieldNumber;
const int SetUserDescriptionReq::kUserIdFieldNumber;
const int SetUserDescriptionReq::kSessionIdFieldNumber;
const int SetUserDescriptionReq::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserDescriptionReq::SetUserDescriptionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserDescriptionReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserDescriptionReq)
}
SetUserDescriptionReq::SetUserDescriptionReq(const SetUserDescriptionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserDescriptionReq)
}

void SetUserDescriptionReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetUserDescriptionReq::~SetUserDescriptionReq() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserDescriptionReq)
  SharedDtor();
}

void SetUserDescriptionReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserDescriptionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserDescriptionReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserDescriptionReq& SetUserDescriptionReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserDescriptionReq.base);
  return *internal_default_instance();
}


void SetUserDescriptionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserDescriptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetUserDescriptionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserDescriptionReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserDescriptionReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserDescriptionReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserDescriptionReq.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserDescriptionReq.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserDescriptionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserDescriptionReq)
  return false;
#undef DO_
}

void SetUserDescriptionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserDescriptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->session_id(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserDescriptionReq)
}

::google::protobuf::uint8* SetUserDescriptionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserDescriptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->session_id(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionReq.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserDescriptionReq)
  return target;
}

size_t SetUserDescriptionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserDescriptionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserDescriptionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserDescriptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserDescriptionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserDescriptionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserDescriptionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserDescriptionReq)
    MergeFrom(*source);
  }
}

void SetUserDescriptionReq::MergeFrom(const SetUserDescriptionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserDescriptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void SetUserDescriptionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserDescriptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserDescriptionReq::CopyFrom(const SetUserDescriptionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserDescriptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserDescriptionReq::IsInitialized() const {
  return true;
}

void SetUserDescriptionReq::Swap(SetUserDescriptionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserDescriptionReq::InternalSwap(SetUserDescriptionReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserDescriptionReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserDescriptionRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserDescriptionRsp::kRequestIdFieldNumber;
const int SetUserDescriptionRsp::kSuccessFieldNumber;
const int SetUserDescriptionRsp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserDescriptionRsp::SetUserDescriptionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserDescriptionRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserDescriptionRsp)
}
SetUserDescriptionRsp::SetUserDescriptionRsp(const SetUserDescriptionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserDescriptionRsp)
}

void SetUserDescriptionRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

SetUserDescriptionRsp::~SetUserDescriptionRsp() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserDescriptionRsp)
  SharedDtor();
}

void SetUserDescriptionRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserDescriptionRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserDescriptionRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserDescriptionRsp& SetUserDescriptionRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserDescriptionRsp.base);
  return *internal_default_instance();
}


void SetUserDescriptionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserDescriptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool SetUserDescriptionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserDescriptionRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserDescriptionRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserDescriptionRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserDescriptionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserDescriptionRsp)
  return false;
#undef DO_
}

void SetUserDescriptionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserDescriptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserDescriptionRsp)
}

::google::protobuf::uint8* SetUserDescriptionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserDescriptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserDescriptionRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserDescriptionRsp)
  return target;
}

size_t SetUserDescriptionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserDescriptionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserDescriptionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserDescriptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserDescriptionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserDescriptionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserDescriptionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserDescriptionRsp)
    MergeFrom(*source);
  }
}

void SetUserDescriptionRsp::MergeFrom(const SetUserDescriptionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserDescriptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void SetUserDescriptionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserDescriptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserDescriptionRsp::CopyFrom(const SetUserDescriptionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserDescriptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserDescriptionRsp::IsInitialized() const {
  return true;
}

void SetUserDescriptionRsp::Swap(SetUserDescriptionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserDescriptionRsp::InternalSwap(SetUserDescriptionRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserDescriptionRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserPhoneNumberReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserPhoneNumberReq::kRequestIdFieldNumber;
const int SetUserPhoneNumberReq::kUserIdFieldNumber;
const int SetUserPhoneNumberReq::kSessionIdFieldNumber;
const int SetUserPhoneNumberReq::kPhoneNumberFieldNumber;
const int SetUserPhoneNumberReq::kPhoneVerifyCodeIdFieldNumber;
const int SetUserPhoneNumberReq::kPhoneVerifyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserPhoneNumberReq::SetUserPhoneNumberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserPhoneNumberReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserPhoneNumberReq)
}
SetUserPhoneNumberReq::SetUserPhoneNumberReq(const SetUserPhoneNumberReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_verify_code_id().size() > 0) {
    phone_verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_verify_code_id_);
  }
  phone_verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_verify_code().size() > 0) {
    phone_verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_verify_code_);
  }
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserPhoneNumberReq)
}

void SetUserPhoneNumberReq::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_verify_code_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_verify_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetUserPhoneNumberReq::~SetUserPhoneNumberReq() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserPhoneNumberReq)
  SharedDtor();
}

void SetUserPhoneNumberReq::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_verify_code_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_verify_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserPhoneNumberReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserPhoneNumberReq::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserPhoneNumberReq& SetUserPhoneNumberReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserPhoneNumberReq.base);
  return *internal_default_instance();
}


void SetUserPhoneNumberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserPhoneNumberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_verify_code_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_verify_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetUserPhoneNumberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserPhoneNumberReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberReq.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberReq.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string session_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberReq.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_number = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_number().data(), static_cast<int>(this->phone_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberReq.phone_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_verify_code_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_verify_code_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_verify_code_id().data(), static_cast<int>(this->phone_verify_code_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberReq.phone_verify_code_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_verify_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_verify_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_verify_code().data(), static_cast<int>(this->phone_verify_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberReq.phone_verify_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserPhoneNumberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserPhoneNumberReq)
  return false;
#undef DO_
}

void SetUserPhoneNumberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserPhoneNumberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->session_id(), output);
  }

  // string phone_number = 4;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone_number(), output);
  }

  // string phone_verify_code_id = 5;
  if (this->phone_verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_verify_code_id().data(), static_cast<int>(this->phone_verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.phone_verify_code_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->phone_verify_code_id(), output);
  }

  // string phone_verify_code = 6;
  if (this->phone_verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_verify_code().data(), static_cast<int>(this->phone_verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.phone_verify_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->phone_verify_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserPhoneNumberReq)
}

::google::protobuf::uint8* SetUserPhoneNumberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserPhoneNumberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->session_id(), target);
  }

  // string phone_number = 4;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone_number(), target);
  }

  // string phone_verify_code_id = 5;
  if (this->phone_verify_code_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_verify_code_id().data(), static_cast<int>(this->phone_verify_code_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.phone_verify_code_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->phone_verify_code_id(), target);
  }

  // string phone_verify_code = 6;
  if (this->phone_verify_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_verify_code().data(), static_cast<int>(this->phone_verify_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberReq.phone_verify_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->phone_verify_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserPhoneNumberReq)
  return target;
}

size_t SetUserPhoneNumberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserPhoneNumberReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string session_id = 3;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // string phone_number = 4;
  if (this->phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_number());
  }

  // string phone_verify_code_id = 5;
  if (this->phone_verify_code_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_verify_code_id());
  }

  // string phone_verify_code = 6;
  if (this->phone_verify_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_verify_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserPhoneNumberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserPhoneNumberReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserPhoneNumberReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserPhoneNumberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserPhoneNumberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserPhoneNumberReq)
    MergeFrom(*source);
  }
}

void SetUserPhoneNumberReq::MergeFrom(const SetUserPhoneNumberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserPhoneNumberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.phone_number().size() > 0) {

    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.phone_verify_code_id().size() > 0) {

    phone_verify_code_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_verify_code_id_);
  }
  if (from.phone_verify_code().size() > 0) {

    phone_verify_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_verify_code_);
  }
}

void SetUserPhoneNumberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserPhoneNumberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserPhoneNumberReq::CopyFrom(const SetUserPhoneNumberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserPhoneNumberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserPhoneNumberReq::IsInitialized() const {
  return true;
}

void SetUserPhoneNumberReq::Swap(SetUserPhoneNumberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserPhoneNumberReq::InternalSwap(SetUserPhoneNumberReq* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_number_.Swap(&other->phone_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_verify_code_id_.Swap(&other->phone_verify_code_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_verify_code_.Swap(&other->phone_verify_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserPhoneNumberReq::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetUserPhoneNumberRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetUserPhoneNumberRsp::kRequestIdFieldNumber;
const int SetUserPhoneNumberRsp::kSuccessFieldNumber;
const int SetUserPhoneNumberRsp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetUserPhoneNumberRsp::SetUserPhoneNumberRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_user_2eproto::scc_info_SetUserPhoneNumberRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chen_im.SetUserPhoneNumberRsp)
}
SetUserPhoneNumberRsp::SetUserPhoneNumberRsp(const SetUserPhoneNumberRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:chen_im.SetUserPhoneNumberRsp)
}

void SetUserPhoneNumberRsp::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

SetUserPhoneNumberRsp::~SetUserPhoneNumberRsp() {
  // @@protoc_insertion_point(destructor:chen_im.SetUserPhoneNumberRsp)
  SharedDtor();
}

void SetUserPhoneNumberRsp::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetUserPhoneNumberRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetUserPhoneNumberRsp::descriptor() {
  ::protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetUserPhoneNumberRsp& SetUserPhoneNumberRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_user_2eproto::scc_info_SetUserPhoneNumberRsp.base);
  return *internal_default_instance();
}


void SetUserPhoneNumberRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:chen_im.SetUserPhoneNumberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool SetUserPhoneNumberRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chen_im.SetUserPhoneNumberRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberRsp.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "chen_im.SetUserPhoneNumberRsp.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chen_im.SetUserPhoneNumberRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chen_im.SetUserPhoneNumberRsp)
  return false;
#undef DO_
}

void SetUserPhoneNumberRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chen_im.SetUserPhoneNumberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberRsp.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // bool success = 2;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberRsp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chen_im.SetUserPhoneNumberRsp)
}

::google::protobuf::uint8* SetUserPhoneNumberRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chen_im.SetUserPhoneNumberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberRsp.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // bool success = 2;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "chen_im.SetUserPhoneNumberRsp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chen_im.SetUserPhoneNumberRsp)
  return target;
}

size_t SetUserPhoneNumberRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chen_im.SetUserPhoneNumberRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // string errmsg = 3;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // bool success = 2;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUserPhoneNumberRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chen_im.SetUserPhoneNumberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUserPhoneNumberRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetUserPhoneNumberRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chen_im.SetUserPhoneNumberRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chen_im.SetUserPhoneNumberRsp)
    MergeFrom(*source);
  }
}

void SetUserPhoneNumberRsp::MergeFrom(const SetUserPhoneNumberRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chen_im.SetUserPhoneNumberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void SetUserPhoneNumberRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chen_im.SetUserPhoneNumberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUserPhoneNumberRsp::CopyFrom(const SetUserPhoneNumberRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chen_im.SetUserPhoneNumberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUserPhoneNumberRsp::IsInitialized() const {
  return true;
}

void SetUserPhoneNumberRsp::Swap(SetUserPhoneNumberRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetUserPhoneNumberRsp::InternalSwap(SetUserPhoneNumberRsp* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetUserPhoneNumberRsp::GetMetadata() const {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_user_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

UserService::~UserService() {}

const ::google::protobuf::ServiceDescriptor* UserService::descriptor() {
  protobuf_user_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_user_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* UserService::GetDescriptor() {
  return descriptor();
}

void UserService::UserRegister(::google::protobuf::RpcController* controller,
                         const ::chen_im::UserRegisterReq*,
                         ::chen_im::UserRegisterRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UserRegister() not implemented.");
  done->Run();
}

void UserService::UserLogin(::google::protobuf::RpcController* controller,
                         const ::chen_im::UserLoginReq*,
                         ::chen_im::UserLoginRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UserLogin() not implemented.");
  done->Run();
}

void UserService::GetPhoneVerifyCode(::google::protobuf::RpcController* controller,
                         const ::chen_im::PhoneVerifyCodeReq*,
                         ::chen_im::PhoneVerifyCodeRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetPhoneVerifyCode() not implemented.");
  done->Run();
}

void UserService::PhoneRegister(::google::protobuf::RpcController* controller,
                         const ::chen_im::PhoneRegisterReq*,
                         ::chen_im::PhoneRegisterRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PhoneRegister() not implemented.");
  done->Run();
}

void UserService::PhoneLogin(::google::protobuf::RpcController* controller,
                         const ::chen_im::PhoneLoginReq*,
                         ::chen_im::PhoneLoginRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PhoneLogin() not implemented.");
  done->Run();
}

void UserService::GetUserInfo(::google::protobuf::RpcController* controller,
                         const ::chen_im::GetUserInfoReq*,
                         ::chen_im::GetUserInfoRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetUserInfo() not implemented.");
  done->Run();
}

void UserService::SetUserAvatar(::google::protobuf::RpcController* controller,
                         const ::chen_im::SetUserAvatarReq*,
                         ::chen_im::SetUserAvatarRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetUserAvatar() not implemented.");
  done->Run();
}

void UserService::SetUserNickname(::google::protobuf::RpcController* controller,
                         const ::chen_im::SetUserNicknameReq*,
                         ::chen_im::SetUserNicknameRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetUserNickname() not implemented.");
  done->Run();
}

void UserService::SetUserDescription(::google::protobuf::RpcController* controller,
                         const ::chen_im::SetUserDescriptionReq*,
                         ::chen_im::SetUserDescriptionRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetUserDescription() not implemented.");
  done->Run();
}

void UserService::SetUserPhoneNumber(::google::protobuf::RpcController* controller,
                         const ::chen_im::SetUserPhoneNumberReq*,
                         ::chen_im::SetUserPhoneNumberRsp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetUserPhoneNumber() not implemented.");
  done->Run();
}

void UserService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_user_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      UserRegister(controller,
             ::google::protobuf::down_cast<const ::chen_im::UserRegisterReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::UserRegisterRsp*>(response),
             done);
      break;
    case 1:
      UserLogin(controller,
             ::google::protobuf::down_cast<const ::chen_im::UserLoginReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::UserLoginRsp*>(response),
             done);
      break;
    case 2:
      GetPhoneVerifyCode(controller,
             ::google::protobuf::down_cast<const ::chen_im::PhoneVerifyCodeReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::PhoneVerifyCodeRsp*>(response),
             done);
      break;
    case 3:
      PhoneRegister(controller,
             ::google::protobuf::down_cast<const ::chen_im::PhoneRegisterReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::PhoneRegisterRsp*>(response),
             done);
      break;
    case 4:
      PhoneLogin(controller,
             ::google::protobuf::down_cast<const ::chen_im::PhoneLoginReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::PhoneLoginRsp*>(response),
             done);
      break;
    case 5:
      GetUserInfo(controller,
             ::google::protobuf::down_cast<const ::chen_im::GetUserInfoReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::GetUserInfoRsp*>(response),
             done);
      break;
    case 6:
      SetUserAvatar(controller,
             ::google::protobuf::down_cast<const ::chen_im::SetUserAvatarReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::SetUserAvatarRsp*>(response),
             done);
      break;
    case 7:
      SetUserNickname(controller,
             ::google::protobuf::down_cast<const ::chen_im::SetUserNicknameReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::SetUserNicknameRsp*>(response),
             done);
      break;
    case 8:
      SetUserDescription(controller,
             ::google::protobuf::down_cast<const ::chen_im::SetUserDescriptionReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::SetUserDescriptionRsp*>(response),
             done);
      break;
    case 9:
      SetUserPhoneNumber(controller,
             ::google::protobuf::down_cast<const ::chen_im::SetUserPhoneNumberReq*>(request),
             ::google::protobuf::down_cast< ::chen_im::SetUserPhoneNumberRsp*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& UserService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::chen_im::UserRegisterReq::default_instance();
    case 1:
      return ::chen_im::UserLoginReq::default_instance();
    case 2:
      return ::chen_im::PhoneVerifyCodeReq::default_instance();
    case 3:
      return ::chen_im::PhoneRegisterReq::default_instance();
    case 4:
      return ::chen_im::PhoneLoginReq::default_instance();
    case 5:
      return ::chen_im::GetUserInfoReq::default_instance();
    case 6:
      return ::chen_im::SetUserAvatarReq::default_instance();
    case 7:
      return ::chen_im::SetUserNicknameReq::default_instance();
    case 8:
      return ::chen_im::SetUserDescriptionReq::default_instance();
    case 9:
      return ::chen_im::SetUserPhoneNumberReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& UserService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::chen_im::UserRegisterRsp::default_instance();
    case 1:
      return ::chen_im::UserLoginRsp::default_instance();
    case 2:
      return ::chen_im::PhoneVerifyCodeRsp::default_instance();
    case 3:
      return ::chen_im::PhoneRegisterRsp::default_instance();
    case 4:
      return ::chen_im::PhoneLoginRsp::default_instance();
    case 5:
      return ::chen_im::GetUserInfoRsp::default_instance();
    case 6:
      return ::chen_im::SetUserAvatarRsp::default_instance();
    case 7:
      return ::chen_im::SetUserNicknameRsp::default_instance();
    case 8:
      return ::chen_im::SetUserDescriptionRsp::default_instance();
    case 9:
      return ::chen_im::SetUserPhoneNumberRsp::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

UserService_Stub::UserService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
UserService_Stub::UserService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
UserService_Stub::~UserService_Stub() {
  if (owns_channel_) delete channel_;
}

void UserService_Stub::UserRegister(::google::protobuf::RpcController* controller,
                              const ::chen_im::UserRegisterReq* request,
                              ::chen_im::UserRegisterRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void UserService_Stub::UserLogin(::google::protobuf::RpcController* controller,
                              const ::chen_im::UserLoginReq* request,
                              ::chen_im::UserLoginRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void UserService_Stub::GetPhoneVerifyCode(::google::protobuf::RpcController* controller,
                              const ::chen_im::PhoneVerifyCodeReq* request,
                              ::chen_im::PhoneVerifyCodeRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void UserService_Stub::PhoneRegister(::google::protobuf::RpcController* controller,
                              const ::chen_im::PhoneRegisterReq* request,
                              ::chen_im::PhoneRegisterRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void UserService_Stub::PhoneLogin(::google::protobuf::RpcController* controller,
                              const ::chen_im::PhoneLoginReq* request,
                              ::chen_im::PhoneLoginRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void UserService_Stub::GetUserInfo(::google::protobuf::RpcController* controller,
                              const ::chen_im::GetUserInfoReq* request,
                              ::chen_im::GetUserInfoRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void UserService_Stub::SetUserAvatar(::google::protobuf::RpcController* controller,
                              const ::chen_im::SetUserAvatarReq* request,
                              ::chen_im::SetUserAvatarRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void UserService_Stub::SetUserNickname(::google::protobuf::RpcController* controller,
                              const ::chen_im::SetUserNicknameReq* request,
                              ::chen_im::SetUserNicknameRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void UserService_Stub::SetUserDescription(::google::protobuf::RpcController* controller,
                              const ::chen_im::SetUserDescriptionReq* request,
                              ::chen_im::SetUserDescriptionRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void UserService_Stub::SetUserPhoneNumber(::google::protobuf::RpcController* controller,
                              const ::chen_im::SetUserPhoneNumberReq* request,
                              ::chen_im::SetUserPhoneNumberRsp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace chen_im
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::UserRegisterReq* Arena::CreateMaybeMessage< ::chen_im::UserRegisterReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::UserRegisterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::UserRegisterRsp* Arena::CreateMaybeMessage< ::chen_im::UserRegisterRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::UserRegisterRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::UserLoginReq* Arena::CreateMaybeMessage< ::chen_im::UserLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::UserLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::UserLoginRsp* Arena::CreateMaybeMessage< ::chen_im::UserLoginRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::UserLoginRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::PhoneVerifyCodeReq* Arena::CreateMaybeMessage< ::chen_im::PhoneVerifyCodeReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::PhoneVerifyCodeReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::PhoneVerifyCodeRsp* Arena::CreateMaybeMessage< ::chen_im::PhoneVerifyCodeRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::PhoneVerifyCodeRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::PhoneRegisterReq* Arena::CreateMaybeMessage< ::chen_im::PhoneRegisterReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::PhoneRegisterReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::PhoneRegisterRsp* Arena::CreateMaybeMessage< ::chen_im::PhoneRegisterRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::PhoneRegisterRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::PhoneLoginReq* Arena::CreateMaybeMessage< ::chen_im::PhoneLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::PhoneLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::PhoneLoginRsp* Arena::CreateMaybeMessage< ::chen_im::PhoneLoginRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::PhoneLoginRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::GetUserInfoReq* Arena::CreateMaybeMessage< ::chen_im::GetUserInfoReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::GetUserInfoReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::GetUserInfoRsp* Arena::CreateMaybeMessage< ::chen_im::GetUserInfoRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::GetUserInfoRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserAvatarReq* Arena::CreateMaybeMessage< ::chen_im::SetUserAvatarReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserAvatarReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserAvatarRsp* Arena::CreateMaybeMessage< ::chen_im::SetUserAvatarRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserAvatarRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserNicknameReq* Arena::CreateMaybeMessage< ::chen_im::SetUserNicknameReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserNicknameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserNicknameRsp* Arena::CreateMaybeMessage< ::chen_im::SetUserNicknameRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserNicknameRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserDescriptionReq* Arena::CreateMaybeMessage< ::chen_im::SetUserDescriptionReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserDescriptionReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserDescriptionRsp* Arena::CreateMaybeMessage< ::chen_im::SetUserDescriptionRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserDescriptionRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserPhoneNumberReq* Arena::CreateMaybeMessage< ::chen_im::SetUserPhoneNumberReq >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserPhoneNumberReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chen_im::SetUserPhoneNumberRsp* Arena::CreateMaybeMessage< ::chen_im::SetUserPhoneNumberRsp >(Arena* arena) {
  return Arena::CreateInternal< ::chen_im::SetUserPhoneNumberRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
