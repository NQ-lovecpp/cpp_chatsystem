// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_storage.proto

#ifndef PROTOBUF_INCLUDED_message_5fstorage_2eproto
#define PROTOBUF_INCLUDED_message_5fstorage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fstorage_2eproto 

namespace protobuf_message_5fstorage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_message_5fstorage_2eproto
namespace chen_im {
class GetHistoryMsgReq;
class GetHistoryMsgReqDefaultTypeInternal;
extern GetHistoryMsgReqDefaultTypeInternal _GetHistoryMsgReq_default_instance_;
class GetHistoryMsgRsp;
class GetHistoryMsgRspDefaultTypeInternal;
extern GetHistoryMsgRspDefaultTypeInternal _GetHistoryMsgRsp_default_instance_;
class GetRecentMsgReq;
class GetRecentMsgReqDefaultTypeInternal;
extern GetRecentMsgReqDefaultTypeInternal _GetRecentMsgReq_default_instance_;
class GetRecentMsgRsp;
class GetRecentMsgRspDefaultTypeInternal;
extern GetRecentMsgRspDefaultTypeInternal _GetRecentMsgRsp_default_instance_;
class MsgSearchReq;
class MsgSearchReqDefaultTypeInternal;
extern MsgSearchReqDefaultTypeInternal _MsgSearchReq_default_instance_;
class MsgSearchRsp;
class MsgSearchRspDefaultTypeInternal;
extern MsgSearchRspDefaultTypeInternal _MsgSearchRsp_default_instance_;
}  // namespace chen_im
namespace google {
namespace protobuf {
template<> ::chen_im::GetHistoryMsgReq* Arena::CreateMaybeMessage<::chen_im::GetHistoryMsgReq>(Arena*);
template<> ::chen_im::GetHistoryMsgRsp* Arena::CreateMaybeMessage<::chen_im::GetHistoryMsgRsp>(Arena*);
template<> ::chen_im::GetRecentMsgReq* Arena::CreateMaybeMessage<::chen_im::GetRecentMsgReq>(Arena*);
template<> ::chen_im::GetRecentMsgRsp* Arena::CreateMaybeMessage<::chen_im::GetRecentMsgRsp>(Arena*);
template<> ::chen_im::MsgSearchReq* Arena::CreateMaybeMessage<::chen_im::MsgSearchReq>(Arena*);
template<> ::chen_im::MsgSearchRsp* Arena::CreateMaybeMessage<::chen_im::MsgSearchRsp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace chen_im {

// ===================================================================

class GetHistoryMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chen_im.GetHistoryMsgReq) */ {
 public:
  GetHistoryMsgReq();
  virtual ~GetHistoryMsgReq();

  GetHistoryMsgReq(const GetHistoryMsgReq& from);

  inline GetHistoryMsgReq& operator=(const GetHistoryMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetHistoryMsgReq(GetHistoryMsgReq&& from) noexcept
    : GetHistoryMsgReq() {
    *this = ::std::move(from);
  }

  inline GetHistoryMsgReq& operator=(GetHistoryMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetHistoryMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetHistoryMsgReq* internal_default_instance() {
    return reinterpret_cast<const GetHistoryMsgReq*>(
               &_GetHistoryMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetHistoryMsgReq* other);
  friend void swap(GetHistoryMsgReq& a, GetHistoryMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetHistoryMsgReq* New() const final {
    return CreateMaybeMessage<GetHistoryMsgReq>(NULL);
  }

  GetHistoryMsgReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetHistoryMsgReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetHistoryMsgReq& from);
  void MergeFrom(const GetHistoryMsgReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetHistoryMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string chat_session_id = 2;
  void clear_chat_session_id();
  static const int kChatSessionIdFieldNumber = 2;
  const ::std::string& chat_session_id() const;
  void set_chat_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_session_id(::std::string&& value);
  #endif
  void set_chat_session_id(const char* value);
  void set_chat_session_id(const char* value, size_t size);
  ::std::string* mutable_chat_session_id();
  ::std::string* release_chat_session_id();
  void set_allocated_chat_session_id(::std::string* chat_session_id);

  // string user_id = 5;
  void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string session_id = 6;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 6;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // int64 start_time = 3;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  ::google::protobuf::int64 start_time() const;
  void set_start_time(::google::protobuf::int64 value);

  // int64 over_time = 4;
  void clear_over_time();
  static const int kOverTimeFieldNumber = 4;
  ::google::protobuf::int64 over_time() const;
  void set_over_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:chen_im.GetHistoryMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr chat_session_id_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 over_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_5fstorage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetHistoryMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chen_im.GetHistoryMsgRsp) */ {
 public:
  GetHistoryMsgRsp();
  virtual ~GetHistoryMsgRsp();

  GetHistoryMsgRsp(const GetHistoryMsgRsp& from);

  inline GetHistoryMsgRsp& operator=(const GetHistoryMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetHistoryMsgRsp(GetHistoryMsgRsp&& from) noexcept
    : GetHistoryMsgRsp() {
    *this = ::std::move(from);
  }

  inline GetHistoryMsgRsp& operator=(GetHistoryMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetHistoryMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetHistoryMsgRsp* internal_default_instance() {
    return reinterpret_cast<const GetHistoryMsgRsp*>(
               &_GetHistoryMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetHistoryMsgRsp* other);
  friend void swap(GetHistoryMsgRsp& a, GetHistoryMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetHistoryMsgRsp* New() const final {
    return CreateMaybeMessage<GetHistoryMsgRsp>(NULL);
  }

  GetHistoryMsgRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetHistoryMsgRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetHistoryMsgRsp& from);
  void MergeFrom(const GetHistoryMsgRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetHistoryMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .chen_im.MessageInfo msg_list = 4;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 4;
  ::chen_im::MessageInfo* mutable_msg_list(int index);
  ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >*
      mutable_msg_list();
  const ::chen_im::MessageInfo& msg_list(int index) const;
  ::chen_im::MessageInfo* add_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >&
      msg_list() const;

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string errmsg = 3;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 3;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:chen_im.GetHistoryMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo > msg_list_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_5fstorage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRecentMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chen_im.GetRecentMsgReq) */ {
 public:
  GetRecentMsgReq();
  virtual ~GetRecentMsgReq();

  GetRecentMsgReq(const GetRecentMsgReq& from);

  inline GetRecentMsgReq& operator=(const GetRecentMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRecentMsgReq(GetRecentMsgReq&& from) noexcept
    : GetRecentMsgReq() {
    *this = ::std::move(from);
  }

  inline GetRecentMsgReq& operator=(GetRecentMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRecentMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRecentMsgReq* internal_default_instance() {
    return reinterpret_cast<const GetRecentMsgReq*>(
               &_GetRecentMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetRecentMsgReq* other);
  friend void swap(GetRecentMsgReq& a, GetRecentMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRecentMsgReq* New() const final {
    return CreateMaybeMessage<GetRecentMsgReq>(NULL);
  }

  GetRecentMsgReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRecentMsgReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRecentMsgReq& from);
  void MergeFrom(const GetRecentMsgReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRecentMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string chat_session_id = 2;
  void clear_chat_session_id();
  static const int kChatSessionIdFieldNumber = 2;
  const ::std::string& chat_session_id() const;
  void set_chat_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_session_id(::std::string&& value);
  #endif
  void set_chat_session_id(const char* value);
  void set_chat_session_id(const char* value, size_t size);
  ::std::string* mutable_chat_session_id();
  ::std::string* release_chat_session_id();
  void set_allocated_chat_session_id(::std::string* chat_session_id);

  // string user_id = 5;
  void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string session_id = 6;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 6;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // int64 msg_count = 3;
  void clear_msg_count();
  static const int kMsgCountFieldNumber = 3;
  ::google::protobuf::int64 msg_count() const;
  void set_msg_count(::google::protobuf::int64 value);

  // int64 cur_time = 4;
  void clear_cur_time();
  static const int kCurTimeFieldNumber = 4;
  ::google::protobuf::int64 cur_time() const;
  void set_cur_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:chen_im.GetRecentMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr chat_session_id_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  ::google::protobuf::int64 msg_count_;
  ::google::protobuf::int64 cur_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_5fstorage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRecentMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chen_im.GetRecentMsgRsp) */ {
 public:
  GetRecentMsgRsp();
  virtual ~GetRecentMsgRsp();

  GetRecentMsgRsp(const GetRecentMsgRsp& from);

  inline GetRecentMsgRsp& operator=(const GetRecentMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRecentMsgRsp(GetRecentMsgRsp&& from) noexcept
    : GetRecentMsgRsp() {
    *this = ::std::move(from);
  }

  inline GetRecentMsgRsp& operator=(GetRecentMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRecentMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRecentMsgRsp* internal_default_instance() {
    return reinterpret_cast<const GetRecentMsgRsp*>(
               &_GetRecentMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetRecentMsgRsp* other);
  friend void swap(GetRecentMsgRsp& a, GetRecentMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRecentMsgRsp* New() const final {
    return CreateMaybeMessage<GetRecentMsgRsp>(NULL);
  }

  GetRecentMsgRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRecentMsgRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRecentMsgRsp& from);
  void MergeFrom(const GetRecentMsgRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRecentMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .chen_im.MessageInfo msg_list = 4;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 4;
  ::chen_im::MessageInfo* mutable_msg_list(int index);
  ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >*
      mutable_msg_list();
  const ::chen_im::MessageInfo& msg_list(int index) const;
  ::chen_im::MessageInfo* add_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >&
      msg_list() const;

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string errmsg = 3;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 3;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:chen_im.GetRecentMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo > msg_list_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_5fstorage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSearchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chen_im.MsgSearchReq) */ {
 public:
  MsgSearchReq();
  virtual ~MsgSearchReq();

  MsgSearchReq(const MsgSearchReq& from);

  inline MsgSearchReq& operator=(const MsgSearchReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSearchReq(MsgSearchReq&& from) noexcept
    : MsgSearchReq() {
    *this = ::std::move(from);
  }

  inline MsgSearchReq& operator=(MsgSearchReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSearchReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSearchReq* internal_default_instance() {
    return reinterpret_cast<const MsgSearchReq*>(
               &_MsgSearchReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgSearchReq* other);
  friend void swap(MsgSearchReq& a, MsgSearchReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSearchReq* New() const final {
    return CreateMaybeMessage<MsgSearchReq>(NULL);
  }

  MsgSearchReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSearchReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSearchReq& from);
  void MergeFrom(const MsgSearchReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSearchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // string chat_session_id = 4;
  void clear_chat_session_id();
  static const int kChatSessionIdFieldNumber = 4;
  const ::std::string& chat_session_id() const;
  void set_chat_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_session_id(::std::string&& value);
  #endif
  void set_chat_session_id(const char* value);
  void set_chat_session_id(const char* value, size_t size);
  ::std::string* mutable_chat_session_id();
  ::std::string* release_chat_session_id();
  void set_allocated_chat_session_id(::std::string* chat_session_id);

  // string search_key = 5;
  void clear_search_key();
  static const int kSearchKeyFieldNumber = 5;
  const ::std::string& search_key() const;
  void set_search_key(const ::std::string& value);
  #if LANG_CXX11
  void set_search_key(::std::string&& value);
  #endif
  void set_search_key(const char* value);
  void set_search_key(const char* value, size_t size);
  ::std::string* mutable_search_key();
  ::std::string* release_search_key();
  void set_allocated_search_key(::std::string* search_key);

  // @@protoc_insertion_point(class_scope:chen_im.MsgSearchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  ::google::protobuf::internal::ArenaStringPtr chat_session_id_;
  ::google::protobuf::internal::ArenaStringPtr search_key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_5fstorage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSearchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:chen_im.MsgSearchRsp) */ {
 public:
  MsgSearchRsp();
  virtual ~MsgSearchRsp();

  MsgSearchRsp(const MsgSearchRsp& from);

  inline MsgSearchRsp& operator=(const MsgSearchRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSearchRsp(MsgSearchRsp&& from) noexcept
    : MsgSearchRsp() {
    *this = ::std::move(from);
  }

  inline MsgSearchRsp& operator=(MsgSearchRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSearchRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSearchRsp* internal_default_instance() {
    return reinterpret_cast<const MsgSearchRsp*>(
               &_MsgSearchRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgSearchRsp* other);
  friend void swap(MsgSearchRsp& a, MsgSearchRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSearchRsp* New() const final {
    return CreateMaybeMessage<MsgSearchRsp>(NULL);
  }

  MsgSearchRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSearchRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSearchRsp& from);
  void MergeFrom(const MsgSearchRsp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSearchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .chen_im.MessageInfo msg_list = 4;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 4;
  ::chen_im::MessageInfo* mutable_msg_list(int index);
  ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >*
      mutable_msg_list();
  const ::chen_im::MessageInfo& msg_list(int index) const;
  ::chen_im::MessageInfo* add_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >&
      msg_list() const;

  // string request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string errmsg = 3;
  void clear_errmsg();
  static const int kErrmsgFieldNumber = 3;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:chen_im.MsgSearchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo > msg_list_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_message_5fstorage_2eproto::TableStruct;
};
// ===================================================================

class MsgStorageService_Stub;

class MsgStorageService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline MsgStorageService() {};
 public:
  virtual ~MsgStorageService();

  typedef MsgStorageService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetHistoryMsg(::google::protobuf::RpcController* controller,
                       const ::chen_im::GetHistoryMsgReq* request,
                       ::chen_im::GetHistoryMsgRsp* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRecentMsg(::google::protobuf::RpcController* controller,
                       const ::chen_im::GetRecentMsgReq* request,
                       ::chen_im::GetRecentMsgRsp* response,
                       ::google::protobuf::Closure* done);
  virtual void MsgSearch(::google::protobuf::RpcController* controller,
                       const ::chen_im::MsgSearchReq* request,
                       ::chen_im::MsgSearchRsp* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MsgStorageService);
};

class MsgStorageService_Stub : public MsgStorageService {
 public:
  MsgStorageService_Stub(::google::protobuf::RpcChannel* channel);
  MsgStorageService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~MsgStorageService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements MsgStorageService ------------------------------------------

  void GetHistoryMsg(::google::protobuf::RpcController* controller,
                       const ::chen_im::GetHistoryMsgReq* request,
                       ::chen_im::GetHistoryMsgRsp* response,
                       ::google::protobuf::Closure* done);
  void GetRecentMsg(::google::protobuf::RpcController* controller,
                       const ::chen_im::GetRecentMsgReq* request,
                       ::chen_im::GetRecentMsgRsp* response,
                       ::google::protobuf::Closure* done);
  void MsgSearch(::google::protobuf::RpcController* controller,
                       const ::chen_im::MsgSearchReq* request,
                       ::chen_im::MsgSearchRsp* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(MsgStorageService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetHistoryMsgReq

// string request_id = 1;
inline void GetHistoryMsgReq::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetHistoryMsgReq::request_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgReq.request_id)
  return request_id_.GetNoArena();
}
inline void GetHistoryMsgReq::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgReq.request_id)
}
#if LANG_CXX11
inline void GetHistoryMsgReq::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetHistoryMsgReq.request_id)
}
#endif
inline void GetHistoryMsgReq::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetHistoryMsgReq.request_id)
}
inline void GetHistoryMsgReq::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetHistoryMsgReq.request_id)
}
inline ::std::string* GetHistoryMsgReq::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgReq.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetHistoryMsgReq::release_request_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetHistoryMsgReq.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetHistoryMsgReq::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetHistoryMsgReq.request_id)
}

// string chat_session_id = 2;
inline void GetHistoryMsgReq::clear_chat_session_id() {
  chat_session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetHistoryMsgReq::chat_session_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgReq.chat_session_id)
  return chat_session_id_.GetNoArena();
}
inline void GetHistoryMsgReq::set_chat_session_id(const ::std::string& value) {
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgReq.chat_session_id)
}
#if LANG_CXX11
inline void GetHistoryMsgReq::set_chat_session_id(::std::string&& value) {
  
  chat_session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetHistoryMsgReq.chat_session_id)
}
#endif
inline void GetHistoryMsgReq::set_chat_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetHistoryMsgReq.chat_session_id)
}
inline void GetHistoryMsgReq::set_chat_session_id(const char* value, size_t size) {
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetHistoryMsgReq.chat_session_id)
}
inline ::std::string* GetHistoryMsgReq::mutable_chat_session_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgReq.chat_session_id)
  return chat_session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetHistoryMsgReq::release_chat_session_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetHistoryMsgReq.chat_session_id)
  
  return chat_session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetHistoryMsgReq::set_allocated_chat_session_id(::std::string* chat_session_id) {
  if (chat_session_id != NULL) {
    
  } else {
    
  }
  chat_session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_session_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetHistoryMsgReq.chat_session_id)
}

// int64 start_time = 3;
inline void GetHistoryMsgReq::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetHistoryMsgReq::start_time() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgReq.start_time)
  return start_time_;
}
inline void GetHistoryMsgReq::set_start_time(::google::protobuf::int64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgReq.start_time)
}

// int64 over_time = 4;
inline void GetHistoryMsgReq::clear_over_time() {
  over_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetHistoryMsgReq::over_time() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgReq.over_time)
  return over_time_;
}
inline void GetHistoryMsgReq::set_over_time(::google::protobuf::int64 value) {
  
  over_time_ = value;
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgReq.over_time)
}

// string user_id = 5;
inline void GetHistoryMsgReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetHistoryMsgReq::user_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgReq.user_id)
  return user_id_.GetNoArena();
}
inline void GetHistoryMsgReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgReq.user_id)
}
#if LANG_CXX11
inline void GetHistoryMsgReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetHistoryMsgReq.user_id)
}
#endif
inline void GetHistoryMsgReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetHistoryMsgReq.user_id)
}
inline void GetHistoryMsgReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetHistoryMsgReq.user_id)
}
inline ::std::string* GetHistoryMsgReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetHistoryMsgReq::release_user_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetHistoryMsgReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetHistoryMsgReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetHistoryMsgReq.user_id)
}

// string session_id = 6;
inline void GetHistoryMsgReq::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetHistoryMsgReq::session_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgReq.session_id)
  return session_id_.GetNoArena();
}
inline void GetHistoryMsgReq::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgReq.session_id)
}
#if LANG_CXX11
inline void GetHistoryMsgReq::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetHistoryMsgReq.session_id)
}
#endif
inline void GetHistoryMsgReq::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetHistoryMsgReq.session_id)
}
inline void GetHistoryMsgReq::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetHistoryMsgReq.session_id)
}
inline ::std::string* GetHistoryMsgReq::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgReq.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetHistoryMsgReq::release_session_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetHistoryMsgReq.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetHistoryMsgReq::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetHistoryMsgReq.session_id)
}

// -------------------------------------------------------------------

// GetHistoryMsgRsp

// string request_id = 1;
inline void GetHistoryMsgRsp::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetHistoryMsgRsp::request_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgRsp.request_id)
  return request_id_.GetNoArena();
}
inline void GetHistoryMsgRsp::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgRsp.request_id)
}
#if LANG_CXX11
inline void GetHistoryMsgRsp::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetHistoryMsgRsp.request_id)
}
#endif
inline void GetHistoryMsgRsp::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetHistoryMsgRsp.request_id)
}
inline void GetHistoryMsgRsp::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetHistoryMsgRsp.request_id)
}
inline ::std::string* GetHistoryMsgRsp::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgRsp.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetHistoryMsgRsp::release_request_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetHistoryMsgRsp.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetHistoryMsgRsp::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetHistoryMsgRsp.request_id)
}

// bool success = 2;
inline void GetHistoryMsgRsp::clear_success() {
  success_ = false;
}
inline bool GetHistoryMsgRsp::success() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgRsp.success)
  return success_;
}
inline void GetHistoryMsgRsp::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgRsp.success)
}

// string errmsg = 3;
inline void GetHistoryMsgRsp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetHistoryMsgRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgRsp.errmsg)
  return errmsg_.GetNoArena();
}
inline void GetHistoryMsgRsp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetHistoryMsgRsp.errmsg)
}
#if LANG_CXX11
inline void GetHistoryMsgRsp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetHistoryMsgRsp.errmsg)
}
#endif
inline void GetHistoryMsgRsp::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetHistoryMsgRsp.errmsg)
}
inline void GetHistoryMsgRsp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetHistoryMsgRsp.errmsg)
}
inline ::std::string* GetHistoryMsgRsp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgRsp.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetHistoryMsgRsp::release_errmsg() {
  // @@protoc_insertion_point(field_release:chen_im.GetHistoryMsgRsp.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetHistoryMsgRsp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetHistoryMsgRsp.errmsg)
}

// repeated .chen_im.MessageInfo msg_list = 4;
inline int GetHistoryMsgRsp::msg_list_size() const {
  return msg_list_.size();
}
inline ::chen_im::MessageInfo* GetHistoryMsgRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:chen_im.GetHistoryMsgRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >*
GetHistoryMsgRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:chen_im.GetHistoryMsgRsp.msg_list)
  return &msg_list_;
}
inline const ::chen_im::MessageInfo& GetHistoryMsgRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:chen_im.GetHistoryMsgRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::chen_im::MessageInfo* GetHistoryMsgRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:chen_im.GetHistoryMsgRsp.msg_list)
  return msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >&
GetHistoryMsgRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:chen_im.GetHistoryMsgRsp.msg_list)
  return msg_list_;
}

// -------------------------------------------------------------------

// GetRecentMsgReq

// string request_id = 1;
inline void GetRecentMsgReq::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRecentMsgReq::request_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgReq.request_id)
  return request_id_.GetNoArena();
}
inline void GetRecentMsgReq::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgReq.request_id)
}
#if LANG_CXX11
inline void GetRecentMsgReq::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetRecentMsgReq.request_id)
}
#endif
inline void GetRecentMsgReq::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetRecentMsgReq.request_id)
}
inline void GetRecentMsgReq::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetRecentMsgReq.request_id)
}
inline ::std::string* GetRecentMsgReq::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgReq.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecentMsgReq::release_request_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetRecentMsgReq.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecentMsgReq::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetRecentMsgReq.request_id)
}

// string chat_session_id = 2;
inline void GetRecentMsgReq::clear_chat_session_id() {
  chat_session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRecentMsgReq::chat_session_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgReq.chat_session_id)
  return chat_session_id_.GetNoArena();
}
inline void GetRecentMsgReq::set_chat_session_id(const ::std::string& value) {
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgReq.chat_session_id)
}
#if LANG_CXX11
inline void GetRecentMsgReq::set_chat_session_id(::std::string&& value) {
  
  chat_session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetRecentMsgReq.chat_session_id)
}
#endif
inline void GetRecentMsgReq::set_chat_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetRecentMsgReq.chat_session_id)
}
inline void GetRecentMsgReq::set_chat_session_id(const char* value, size_t size) {
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetRecentMsgReq.chat_session_id)
}
inline ::std::string* GetRecentMsgReq::mutable_chat_session_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgReq.chat_session_id)
  return chat_session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecentMsgReq::release_chat_session_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetRecentMsgReq.chat_session_id)
  
  return chat_session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecentMsgReq::set_allocated_chat_session_id(::std::string* chat_session_id) {
  if (chat_session_id != NULL) {
    
  } else {
    
  }
  chat_session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_session_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetRecentMsgReq.chat_session_id)
}

// int64 msg_count = 3;
inline void GetRecentMsgReq::clear_msg_count() {
  msg_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetRecentMsgReq::msg_count() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgReq.msg_count)
  return msg_count_;
}
inline void GetRecentMsgReq::set_msg_count(::google::protobuf::int64 value) {
  
  msg_count_ = value;
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgReq.msg_count)
}

// int64 cur_time = 4;
inline void GetRecentMsgReq::clear_cur_time() {
  cur_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetRecentMsgReq::cur_time() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgReq.cur_time)
  return cur_time_;
}
inline void GetRecentMsgReq::set_cur_time(::google::protobuf::int64 value) {
  
  cur_time_ = value;
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgReq.cur_time)
}

// string user_id = 5;
inline void GetRecentMsgReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRecentMsgReq::user_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgReq.user_id)
  return user_id_.GetNoArena();
}
inline void GetRecentMsgReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgReq.user_id)
}
#if LANG_CXX11
inline void GetRecentMsgReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetRecentMsgReq.user_id)
}
#endif
inline void GetRecentMsgReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetRecentMsgReq.user_id)
}
inline void GetRecentMsgReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetRecentMsgReq.user_id)
}
inline ::std::string* GetRecentMsgReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecentMsgReq::release_user_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetRecentMsgReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecentMsgReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetRecentMsgReq.user_id)
}

// string session_id = 6;
inline void GetRecentMsgReq::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRecentMsgReq::session_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgReq.session_id)
  return session_id_.GetNoArena();
}
inline void GetRecentMsgReq::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgReq.session_id)
}
#if LANG_CXX11
inline void GetRecentMsgReq::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetRecentMsgReq.session_id)
}
#endif
inline void GetRecentMsgReq::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetRecentMsgReq.session_id)
}
inline void GetRecentMsgReq::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetRecentMsgReq.session_id)
}
inline ::std::string* GetRecentMsgReq::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgReq.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecentMsgReq::release_session_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetRecentMsgReq.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecentMsgReq::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetRecentMsgReq.session_id)
}

// -------------------------------------------------------------------

// GetRecentMsgRsp

// string request_id = 1;
inline void GetRecentMsgRsp::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRecentMsgRsp::request_id() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgRsp.request_id)
  return request_id_.GetNoArena();
}
inline void GetRecentMsgRsp::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgRsp.request_id)
}
#if LANG_CXX11
inline void GetRecentMsgRsp::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetRecentMsgRsp.request_id)
}
#endif
inline void GetRecentMsgRsp::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetRecentMsgRsp.request_id)
}
inline void GetRecentMsgRsp::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetRecentMsgRsp.request_id)
}
inline ::std::string* GetRecentMsgRsp::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgRsp.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecentMsgRsp::release_request_id() {
  // @@protoc_insertion_point(field_release:chen_im.GetRecentMsgRsp.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecentMsgRsp::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetRecentMsgRsp.request_id)
}

// bool success = 2;
inline void GetRecentMsgRsp::clear_success() {
  success_ = false;
}
inline bool GetRecentMsgRsp::success() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgRsp.success)
  return success_;
}
inline void GetRecentMsgRsp::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgRsp.success)
}

// string errmsg = 3;
inline void GetRecentMsgRsp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRecentMsgRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgRsp.errmsg)
  return errmsg_.GetNoArena();
}
inline void GetRecentMsgRsp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.GetRecentMsgRsp.errmsg)
}
#if LANG_CXX11
inline void GetRecentMsgRsp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.GetRecentMsgRsp.errmsg)
}
#endif
inline void GetRecentMsgRsp::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.GetRecentMsgRsp.errmsg)
}
inline void GetRecentMsgRsp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.GetRecentMsgRsp.errmsg)
}
inline ::std::string* GetRecentMsgRsp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgRsp.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecentMsgRsp::release_errmsg() {
  // @@protoc_insertion_point(field_release:chen_im.GetRecentMsgRsp.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecentMsgRsp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:chen_im.GetRecentMsgRsp.errmsg)
}

// repeated .chen_im.MessageInfo msg_list = 4;
inline int GetRecentMsgRsp::msg_list_size() const {
  return msg_list_.size();
}
inline ::chen_im::MessageInfo* GetRecentMsgRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:chen_im.GetRecentMsgRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >*
GetRecentMsgRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:chen_im.GetRecentMsgRsp.msg_list)
  return &msg_list_;
}
inline const ::chen_im::MessageInfo& GetRecentMsgRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:chen_im.GetRecentMsgRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::chen_im::MessageInfo* GetRecentMsgRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:chen_im.GetRecentMsgRsp.msg_list)
  return msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >&
GetRecentMsgRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:chen_im.GetRecentMsgRsp.msg_list)
  return msg_list_;
}

// -------------------------------------------------------------------

// MsgSearchReq

// string request_id = 1;
inline void MsgSearchReq::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchReq::request_id() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchReq.request_id)
  return request_id_.GetNoArena();
}
inline void MsgSearchReq::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchReq.request_id)
}
#if LANG_CXX11
inline void MsgSearchReq::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchReq.request_id)
}
#endif
inline void MsgSearchReq::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchReq.request_id)
}
inline void MsgSearchReq::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchReq.request_id)
}
inline ::std::string* MsgSearchReq::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchReq.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchReq::release_request_id() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchReq.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchReq::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchReq.request_id)
}

// string user_id = 2;
inline void MsgSearchReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchReq::user_id() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchReq.user_id)
  return user_id_.GetNoArena();
}
inline void MsgSearchReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchReq.user_id)
}
#if LANG_CXX11
inline void MsgSearchReq::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchReq.user_id)
}
#endif
inline void MsgSearchReq::set_user_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchReq.user_id)
}
inline void MsgSearchReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchReq.user_id)
}
inline ::std::string* MsgSearchReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchReq::release_user_id() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchReq.user_id)
}

// string session_id = 3;
inline void MsgSearchReq::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchReq::session_id() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchReq.session_id)
  return session_id_.GetNoArena();
}
inline void MsgSearchReq::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchReq.session_id)
}
#if LANG_CXX11
inline void MsgSearchReq::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchReq.session_id)
}
#endif
inline void MsgSearchReq::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchReq.session_id)
}
inline void MsgSearchReq::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchReq.session_id)
}
inline ::std::string* MsgSearchReq::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchReq.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchReq::release_session_id() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchReq.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchReq::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchReq.session_id)
}

// string chat_session_id = 4;
inline void MsgSearchReq::clear_chat_session_id() {
  chat_session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchReq::chat_session_id() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchReq.chat_session_id)
  return chat_session_id_.GetNoArena();
}
inline void MsgSearchReq::set_chat_session_id(const ::std::string& value) {
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchReq.chat_session_id)
}
#if LANG_CXX11
inline void MsgSearchReq::set_chat_session_id(::std::string&& value) {
  
  chat_session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchReq.chat_session_id)
}
#endif
inline void MsgSearchReq::set_chat_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchReq.chat_session_id)
}
inline void MsgSearchReq::set_chat_session_id(const char* value, size_t size) {
  
  chat_session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchReq.chat_session_id)
}
inline ::std::string* MsgSearchReq::mutable_chat_session_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchReq.chat_session_id)
  return chat_session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchReq::release_chat_session_id() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchReq.chat_session_id)
  
  return chat_session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchReq::set_allocated_chat_session_id(::std::string* chat_session_id) {
  if (chat_session_id != NULL) {
    
  } else {
    
  }
  chat_session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_session_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchReq.chat_session_id)
}

// string search_key = 5;
inline void MsgSearchReq::clear_search_key() {
  search_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchReq::search_key() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchReq.search_key)
  return search_key_.GetNoArena();
}
inline void MsgSearchReq::set_search_key(const ::std::string& value) {
  
  search_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchReq.search_key)
}
#if LANG_CXX11
inline void MsgSearchReq::set_search_key(::std::string&& value) {
  
  search_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchReq.search_key)
}
#endif
inline void MsgSearchReq::set_search_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  search_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchReq.search_key)
}
inline void MsgSearchReq::set_search_key(const char* value, size_t size) {
  
  search_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchReq.search_key)
}
inline ::std::string* MsgSearchReq::mutable_search_key() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchReq.search_key)
  return search_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchReq::release_search_key() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchReq.search_key)
  
  return search_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchReq::set_allocated_search_key(::std::string* search_key) {
  if (search_key != NULL) {
    
  } else {
    
  }
  search_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_key);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchReq.search_key)
}

// -------------------------------------------------------------------

// MsgSearchRsp

// string request_id = 1;
inline void MsgSearchRsp::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchRsp::request_id() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchRsp.request_id)
  return request_id_.GetNoArena();
}
inline void MsgSearchRsp::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchRsp.request_id)
}
#if LANG_CXX11
inline void MsgSearchRsp::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchRsp.request_id)
}
#endif
inline void MsgSearchRsp::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchRsp.request_id)
}
inline void MsgSearchRsp::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchRsp.request_id)
}
inline ::std::string* MsgSearchRsp::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchRsp.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchRsp::release_request_id() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchRsp.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchRsp::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchRsp.request_id)
}

// bool success = 2;
inline void MsgSearchRsp::clear_success() {
  success_ = false;
}
inline bool MsgSearchRsp::success() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchRsp.success)
  return success_;
}
inline void MsgSearchRsp::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchRsp.success)
}

// string errmsg = 3;
inline void MsgSearchRsp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSearchRsp::errmsg() const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchRsp.errmsg)
  return errmsg_.GetNoArena();
}
inline void MsgSearchRsp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chen_im.MsgSearchRsp.errmsg)
}
#if LANG_CXX11
inline void MsgSearchRsp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:chen_im.MsgSearchRsp.errmsg)
}
#endif
inline void MsgSearchRsp::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chen_im.MsgSearchRsp.errmsg)
}
inline void MsgSearchRsp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chen_im.MsgSearchRsp.errmsg)
}
inline ::std::string* MsgSearchRsp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchRsp.errmsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSearchRsp::release_errmsg() {
  // @@protoc_insertion_point(field_release:chen_im.MsgSearchRsp.errmsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSearchRsp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:chen_im.MsgSearchRsp.errmsg)
}

// repeated .chen_im.MessageInfo msg_list = 4;
inline int MsgSearchRsp::msg_list_size() const {
  return msg_list_.size();
}
inline ::chen_im::MessageInfo* MsgSearchRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:chen_im.MsgSearchRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >*
MsgSearchRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:chen_im.MsgSearchRsp.msg_list)
  return &msg_list_;
}
inline const ::chen_im::MessageInfo& MsgSearchRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:chen_im.MsgSearchRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::chen_im::MessageInfo* MsgSearchRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:chen_im.MsgSearchRsp.msg_list)
  return msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::chen_im::MessageInfo >&
MsgSearchRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:chen_im.MsgSearchRsp.msg_list)
  return msg_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace chen_im

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_message_5fstorage_2eproto
